<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://josecastillolema.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://josecastillolema.github.io/" rel="alternate" type="text/html" /><updated>2024-05-20T04:33:34-05:00</updated><id>https://josecastillolema.github.io/feed.xml</id><title type="html">GitOps</title><subtitle>Networks, SDN, NFVi, OpenStack, K8s/OpenShift.</subtitle><author><name>Jose Castillo Lema</name></author><entry><title type="html">Management orchestrator for a Content-Centric Network in a 6G network</title><link href="https://josecastillolema.github.io/dnfa6/" rel="alternate" type="text/html" title="Management orchestrator for a Content-Centric Network in a 6G network" /><published>2024-05-20T00:00:00-05:00</published><updated>2024-05-20T00:00:00-05:00</updated><id>https://josecastillolema.github.io/dnfa6</id><content type="html" xml:base="https://josecastillolema.github.io/dnfa6/"><![CDATA[<p><a href="https://www.freepatentsonline.com/y2024/0163689.html"><strong>Management orchestrator for a Content-Centric Network in a 6G network</strong></a></p>

<h4 id="inventors">Inventors</h4>
<p>Jose Castillo Lema</p>

<h4 id="publication-date">Publication date</h4>
<p>2024/5/16</p>

<h4 id="patent-office">Patent office</h4>
<p>US</p>

<h4 id="application-number">Application number</h4>
<p>17985750</p>

<h4 id="description">Description</h4>
<p>A management orchestrator for a content-centric network in a 6G network is described herein according to some aspects. For example, the management orchestrator can receive, from a client device, a request for a network function in the content-centric network executed by a plurality of network nodes in the 6G network. In response to receiving the request for the network function, the management orchestrator can identify a particular network node of the plurality of network nodes usable for executing the network function. The management orchestrator can then automatically deploy a named function via the particular network node. The named function can be used to execute the network function for the client device.</p>

<h4 id="cite-this">Cite this</h4>

<h5 id="bibtex">BibTex</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@{patent:20240163689,
 title     = "MANAGEMENT ORCHESTRATOR FOR A CONTENT-CENTRIC NETWORK IN A 6G NETWORK",
 number    = "20240163689",
 author    = "Castillo Lema, Jose (Sao Paulo, BR)",
 year      = "2024",
 month     = "May",
 url       = "https://www.freepatentsonline.com/y2024/0163689.html"
}
</code></pre></div></div>

<h5 id="endnote">EndNote</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>*Patent
Author	Year	Title	Country	Assignee	Number	URL
Castillo Lema, Jose (Sao Paulo, BR)	2024	MANAGEMENT ORCHESTRATOR FOR A CONTENT-CENTRIC NETWORK IN A 6G NETWORK	United States	Red Hat, Inc. (Raleigh, NC, US)	20240163689	https://www.freepatentsonline.com/y2024/0163689.html
</code></pre></div></div>]]></content><author><name>Jose Castillo Lema</name></author><category term="ccn" /><category term="en" /><category term="networks" /><category term="nfv" /><category term="papers" /><category term="research" /><summary type="html"><![CDATA[Management orchestrator for a Content-Centric Network in a 6G network]]></summary></entry><entry><title type="html">Red Hat Summit 2024</title><link href="https://josecastillolema.github.io/rh-summit24/" rel="alternate" type="text/html" title="Red Hat Summit 2024" /><published>2024-05-03T00:00:00-05:00</published><updated>2024-05-03T00:00:00-05:00</updated><id>https://josecastillolema.github.io/rh-summit24</id><content type="html" xml:base="https://josecastillolema.github.io/rh-summit24/"><![CDATA[<p><a href="https://www.redhat.com/en/summit"><img src="/assets/images/posts/2024-05-03-rh-summit24.png" alt="" /></a></p>

<p><a href="https://www.redhat.com/en/summit">Red Hat Summit</a> and AnsibleFest 2024 is just a few days away and we know you won’t want to miss out on any of the activities, sessions or events we have planned.</p>

<p><img src="/assets/images/posts/2022-04-25-rh-summit22/2.png" alt="" /></p>]]></content><author><name>Jose Castillo Lema</name></author><category term="ansible" /><category term="en" /><category term="events" /><category term="openshift" /><category term="redhat" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Introduction to Nephio (LSF179)</title><link href="https://josecastillolema.github.io/lf-nephio/" rel="alternate" type="text/html" title="Introduction to Nephio (LSF179)" /><published>2024-05-02T00:00:00-05:00</published><updated>2024-05-02T00:00:00-05:00</updated><id>https://josecastillolema.github.io/lf-nephio</id><content type="html" xml:base="https://josecastillolema.github.io/lf-nephio/"><![CDATA[<p><a href="https://training.linuxfoundation.org/"><img src="/assets/images/posts/2021-09-03-lf-courses.png" alt="" /></a></p>

<p><a href="https://training.linuxfoundation.org/">Linux Foundation Training &amp; Certification</a> provides free online-learning courses on a range of open source topics from Linux to blockchain, networking to cloud, and everything in between.</p>

<ul>
  <li>Earn certificates and badges</li>
  <li>Free</li>
</ul>

<h2 id="introduction-to-nephio-lsf179"><a href="https://trainingportal.linuxfoundation.org/courses/introduction-to-nephio-lfs179">Introduction to Nephio (LSF179)</a></h2>

<p>Learners will understand the scope, goals and benefits of Nephio’s new approach to automation. They will be empowered to navigate and contribute to the Nephio community and explore Nephio use cases and POCs relevant to their line of business.</p>

<div data-iframe-width="300" data-iframe-height="270" data-share-badge-id="d60bd0d8-9b37-48fb-aaac-68a011fe432b" data-share-badge-host="https://www.credly.com"></div>
<script type="text/javascript" async="" src="//cdn.credly.com/assets/utilities/embed.js"></script>]]></content><author><name>Jose Castillo Lema</name></author><category term="cert" /><category term="en" /><category term="iac" /><category term="networks" /><category term="nfv" /><category term="openshift" /><category term="redhat" /><category term="sdn" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Descubre el poder de la programación funcional a través de OCaml</title><link href="https://josecastillolema.github.io/industriosa-ocaml/" rel="alternate" type="text/html" title="Descubre el poder de la programación funcional a través de OCaml" /><published>2024-03-30T00:00:00-05:00</published><updated>2024-03-30T00:00:00-05:00</updated><id>https://josecastillolema.github.io/industriosa-ocaml</id><content type="html" xml:base="https://josecastillolema.github.io/industriosa-ocaml/"><![CDATA[<p><img src="/assets/images/posts/2024-03-30-industriosa-ocaml/1.webp" alt="" /></p>

<p>La <strong>programación funcional</strong> es un paradigma que enfatiza el uso de funciones en lugar de modificar el estado o los datos directamente. Promueve un código declarativo conciso y se centra en la inmutabilidad, lo que hace que su código sea más fácil de leer, depurar y razonar. Esta reunión tiene como objetivo presentar <a href="https://ocaml.org/">OCaml</a>, un lenguaje de programación funcional de propósito general y tipado estático con un fuerte soporte para los principios de programación funcional.</p>

<p>En este evento abordaremos los siguientes temas:</p>

<ul>
  <li>Introducción a los conceptos de programación funcional (funciones de primera clase, funciones puras, inmutabilidad, recursividad)</li>
  <li>Comprender los fundamentos de OCaml (tipos de datos, sintaxis, operaciones básicas)</li>
  <li>Librería principal de OCaml y las funciones de la librería estándar</li>
  <li>Ejemplos del mundo real de programación funcional con OCaml (analizadores, intérpretes, etc.)</li>
</ul>

<p>Esta reunión brindará una oportunidad para que los asistentes tengan conocimientos prácticos.</p>

<p>El ponente será José Castillo, desarrollador de software en Red Hat. José tiene amplia experiencia trabajando con herramientas nativas de la nube dentro de Red Hat y muy vinculado al mundo Telco, trabajando anteriormente en tecnologías 4G y 5G.</p>

<p>No te pierdas esta oportunidad de obtener información valiosa sobre la programación funcional a través de OCaml. Inscripciones via <a href="https://www.meetup.com/es-ES/aindustriosa/events/299611775/">Meetup</a>.</p>

<p>Esta actividad cuenta con el patrocinio de la Xunta de Galicia y la Axencia Para a Modernización Tecnolóxica (AMTEGA).</p>

<p><a href="https://aindustriosa.org/">A Industriosa</a> es una asociación sin ánimo de lucro que gestiona y promociona un medialab en la ciudad de Vigo. Un espacio donde makers, comunidades tecnológicas y empresas cuentan con el equipamiento necesario para llevar a cabo sus proyectos. Un punto de encuentro donde aprender, compartir y construir. <a href="https://aindustriosa.org/Descubre-o-poder-da-programacion-funcional-a-traves-de-OCaml/">Link</a> del evento.</p>

<p><a href="https://www.meetup.com/es-ES/aindustriosa/events/299611775/"><img src="/assets/images/posts/2024-03-30-industriosa-ocaml/2.jpg" alt="" /></a></p>]]></content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="es" /><category term="events" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Code the Dream Skill-IT workshops</title><link href="https://josecastillolema.github.io/codethedream/" rel="alternate" type="text/html" title="Code the Dream Skill-IT workshops" /><published>2024-02-03T00:00:00-06:00</published><updated>2024-02-03T00:00:00-06:00</updated><id>https://josecastillolema.github.io/codethedream</id><content type="html" xml:base="https://josecastillolema.github.io/codethedream/"><![CDATA[<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=codethedream&amp;type=watch&amp;count=true&amp;size=large&amp;v=2" frameborder="0" scrolling="0" width="130" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=codethedream&amp;type=star&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="115" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=codethedream&amp;type=fork&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="170" height="30" title="GitHub"></iframe>

<h1 id="code-the-dream">Code the dream</h1>

<p><img src="https://raw.githubusercontent.com/josecastillolema/codethedream/main/img/logo.png" alt="Code the Dream" /></p>

<p>Classes for <a href="https://codethedream.org/">Code the Dream</a> Skill-IT workshops.</p>

<ul>
  <li><a href="https://github.com/josecastillolema/codethedream/blob/main/lab01-docker.md">Docker Hands-on Practice</a></li>
</ul>

<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;type=follow&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="230" height="30" title="GitHub"></iframe>]]></content><author><name>Jose Castillo Lema</name></author><category term="classes" /><category term="en" /><category term="openshift" /><category term="redhat" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Flatpak SDK Extension for OCaml</title><link href="https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml/" rel="alternate" type="text/html" title="Flatpak SDK Extension for OCaml" /><published>2024-01-04T00:00:00-06:00</published><updated>2024-01-04T00:00:00-06:00</updated><id>https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml</id><content type="html" xml:base="https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml/"><![CDATA[<iframe src="https://ghbtns.com/github-btn.html?user=flathub&amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;type=watch&amp;count=true&amp;size=large&amp;v=2" frameborder="0" scrolling="0" width="130" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=flathub&amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;type=star&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="115" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=flathub&amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;type=fork&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="170" height="30" title="GitHub"></iframe>

<h1 id="sdk-extension-for-ocaml-stable">SDK Extension for OCaml stable</h1>

<p>This extension contains various components of the <a href="https://ocaml.org/">OCaml</a> stable toolchain.</p>

<p>Includes the <a href="https://dune.build/">Dune build system</a> and the OCaml Package Manager <a href="https://opam.ocaml.org/">opam</a>.</p>
<h2 id="create-flatpak-ocaml-applications">Create Flatpak OCaml applications</h2>

<p>Several examples on how to Flatpak OCaml applications leveraging this SDK can be found <a href="https://github.com/josecastillolema/flatpak-ocaml-examples">here</a>.</p>

<h2 id="debugging">Debugging</h2>

<p>In order to use this extension in a Flatpak SDK environment you may add all provided tools in your PATH by executing first:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ source /usr/lib/sdk/ocaml/enable.sh
</code></pre></div></div>

<h2 id="install-packages-interactivelly">Install packages interactivelly</h2>

<h3 id="initializing-the-environment">Initializing the Environment</h3>

<p>In order to interactivelly install <a href="https://opam.ocaml.org/">OCaml Package Manager (opam)</a> packages in a Flatpak environmment you will need to initialize a new environment:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ opam init --disable-sandboxing --no-setup --root $XDG_DATA_HOME/ocaml
</code></pre></div></div>

<h3 id="load-the-environment-per-session">Load the Environment Per Session</h3>

<p><em>The environment will be forgotten after you restart the app, if you use this method</em></p>

<p>Run the following command to load the create the environment</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ eval $(opam env --root=$XDG_DATA_HOME/ocaml --switch=default --set-root --set-switch)

$ opam switch
#  switch   compiler     description
→  default  ocaml.5.1.0  default
</code></pre></div></div>

<h3 id="load-the-environment-permanently">Load the Environment Permanently</h3>

<p>Run the following command to get the path of your environment, using vscodium as an example</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak run --command=bash com.vscodium.codium

[📦 com.vscodium.codium ~]$ echo $XDG_DATA_HOME/ocaml
/var/home/&lt;username&gt;/.var/app/com.vscodium.codium/data/ocaml
</code></pre></div></div>

<p>Copy the output <code class="language-plaintext highlighter-rouge">/var/home/&lt;username&gt;/.var/app/com.vscodium.codium/data/ocaml</code>, 
and add <code class="language-plaintext highlighter-rouge">OPAMROOT=/var/home/&lt;username&gt;/.var/app/com.vscodium.codium/data/ocaml</code> 
as a environment variable for the app in <a href="https://flathub.org/apps/com.github.tchx84.Flatseal">flatseal</a></p>

<h2 id="development">Development</h2>
<p>To use the SDK with your favourite editor:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml com.visualstudio.code
$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml org.gnu.emacs
$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml io.neovim.nvim
</code></pre></div></div>

<p>or just use <code class="language-plaintext highlighter-rouge">FLATPAK_ENABLE_SDK_EXT=*</code> to load every SDK available in your system:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=* com.visualstudio.code
</code></pre></div></div>

<p>When running your editor you should see something like this, i.e.:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak run com.visualstudio.code
flatpak-vscode: Enabling SDK extension "ocaml"
</code></pre></div></div>

<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;type=follow&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="230" height="30" title="GitHub"></iframe>]]></content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="en" /><category term="redhat" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Happy new year!</title><link href="https://josecastillolema.github.io/newyear24/" rel="alternate" type="text/html" title="Happy new year!" /><published>2024-01-01T00:00:00-06:00</published><updated>2024-01-01T00:00:00-06:00</updated><id>https://josecastillolema.github.io/newyear24</id><content type="html" xml:base="https://josecastillolema.github.io/newyear24/"><![CDATA[<p><img src="/assets/images/posts/2024-01-01-newyear24/1.png" alt="" /></p>

<p><img src="/assets/images/posts/2024-01-01-newyear24/2.png" alt="" /></p>

<p><img src="/assets/images/posts/2024-01-01-newyear24/3.png" alt="" /></p>]]></content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="es" /><category term="redhat" /><category term="pt" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">How to Flatpak OCaml applications</title><link href="https://josecastillolema.github.io/flatpak-ocaml/" rel="alternate" type="text/html" title="How to Flatpak OCaml applications" /><published>2023-12-19T00:00:00-06:00</published><updated>2023-12-19T00:00:00-06:00</updated><id>https://josecastillolema.github.io/flatpak-ocaml</id><content type="html" xml:base="https://josecastillolema.github.io/flatpak-ocaml/"><![CDATA[<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=flatpak-ocaml-examples&amp;type=watch&amp;count=true&amp;size=large&amp;v=2" frameborder="0" scrolling="0" width="130" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=flatpak-ocaml-examples&amp;type=star&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="115" height="30" title="GitHub"></iframe>
<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;repo=flatpak-ocaml-examples&amp;type=fork&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="170" height="30" title="GitHub"></iframe>

<h1 id="how-to-flatpak-an-ocaml-application">How to Flatpak an OCaml application</h1>

<p>Let’s take a couple <a href="https://ocaml.org/">OCaml</a> applications to illustrate <a href="https://flatpak.org/">Flatpak</a> distributing and packaging leveraging the <a href="https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml">Flatpak SDK Extension for OCaml</a>:</p>
<ul>
  <li>a hello world CLI application</li>
  <li>a simple GTK program from the <a href="https://v2.ocaml.org/learn/tutorials/introduction_to_gtk.html">Introduction to Gtk</a> OCaml tutorial</li>
</ul>

<p>The SDK is only needed during the building phase.</p>

<p><strong>Table of contents</strong></p>
<ul>
  <li><a href="#how-to-flatpak-an-ocaml-application">How to Flatpak an OCaml application</a>
    <ul>
      <li><a href="#creating-a-hello-world-cli-application">Creating a hello world CLI application</a>
        <ul>
          <li><a href="#flatpak-manifest">Flatpak manifest</a></li>
          <li><a href="#install-and-run-the-application">Install and run the application</a></li>
        </ul>
      </li>
      <li><a href="#creating-a-simple-gtk-program">Creating a simple GTK program</a>
        <ul>
          <li><a href="#preparations">Preparations</a>
            <ul>
              <li><a href="#import-gtk2-library">Import GTK2 library</a></li>
              <li><a href="#wrapper-script">Wrapper script</a></li>
            </ul>
          </li>
          <li><a href="#building-from-sources">Building from sources</a>
            <ul>
              <li><a href="#flatpak-manifest-1">Flatpak manifest</a></li>
              <li><a href="#install-and-run-the-application-1">Install and run the application</a></li>
            </ul>
          </li>
          <li><a href="#building-with-opam">Building with opam</a>
            <ul>
              <li><a href="#source-files">Source files</a></li>
              <li><a href="#generate-flatpak-manifest-code">Generate Flatpak manifest code</a></li>
              <li><a href="#flatpak-manifest-2">Flatpak manifest</a></li>
              <li><a href="#install-and-run-the-application-2">Install and run the application</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#publish-the-application">Publish the application</a></li>
    </ul>
  </li>
</ul>

<h2 id="creating-a-hello-world-cli-application">Creating a hello world CLI application</h2>

<p>Create a hello world <code class="language-plaintext highlighter-rouge">example.ml</code>:</p>
<div class="language-ocaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="bp">()</span> <span class="o">=</span> <span class="n">print_endline</span> <span class="s2">"hello world"</span>
</code></pre></div></div>

<p>You can compile your code with the OCaml compiler <code class="language-plaintext highlighter-rouge">ocamlopt</code> (no need to do so at this point):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ocamlopt -o example example.ml
$ ./example
hello world
</code></pre></div></div>

<h3 id="flatpak-manifest">Flatpak manifest</h3>

<p>Some things to note in the following manifest:</p>
<ul>
  <li>The SDK extension pointing to the <a href="https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml">Flatpak SDK Extension for OCaml</a> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L9-L10">↵</a></li>
  <li>The build options setting the <code class="language-plaintext highlighter-rouge">PATH</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L13-L14">↵</a></li>
  <li>Build some pre-requisistes using <code class="language-plaintext highlighter-rouge">dune</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L17-L24">↵</a></li>
  <li>Installing the application to <code class="language-plaintext highlighter-rouge">/app/bin</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L33">↵</a></li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">app-id</span><span class="pi">:</span> <span class="s">flatpak.ocaml.example</span>
<span class="na">runtime</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">runtime-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">22.08'</span>
<span class="na">sdk</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">sdk-extensions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">org.freedesktop.Sdk.Extension.ocaml</span>
<span class="na">command</span><span class="pi">:</span> <span class="s">example</span>

<span class="na">build-options</span><span class="pi">:</span>
  <span class="na">append-path</span><span class="pi">:</span> <span class="s">/usr/lib/sdk/ocaml/bin</span>

<span class="na">modules</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">camlp-streams</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/camlp-streams</span>
        <span class="na">branch</span><span class="pi">:</span> <span class="s">trunk</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">dune build</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">example</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">file</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">example.ml</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ocamlopt -o example example.ml</span>
      <span class="pi">-</span> <span class="s">install -Dm755 example -t /app/bin/</span>
</code></pre></div></div>

<h3 id="install-and-run-the-application">Install and run the application</h3>

<p>Build and install the Flatpak package locally using <code class="language-plaintext highlighter-rouge">flatpak-builder</code>:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak-builder --force-clean build-dir flatpak.ocaml.example.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.example.yaml
</code></pre></div></div>

<p>Run the application:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak run flatpak.ocaml.example
hello world
</code></pre></div></div>

<p>The application has an installed size of 369.2 kB:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak info flatpak.ocaml.example
          ID: flatpak.ocaml.example
         Ref: app/flatpak.ocaml.example/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: example-origin
  Collection:
Installation: user
   Installed: 368.3 kB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: 02386f983e23b6d991651e86c1b1a55531fd4fa6504c730c938bc06033c19f40
     Subject: Export flatpak.ocaml.example
        Date: 2023-10-09 12:34:32 +0000
</code></pre></div></div>

<h2 id="creating-a-simple-gtk-program">Creating a simple GTK program</h2>

<p>Let’s use the simple <code class="language-plaintext highlighter-rouge">lablgtk</code> program from the <a href="https://v2.ocaml.org/learn/tutorials/introduction_to_gtk.html">Introduction to Gtk</a> OCaml tutorial <code class="language-plaintext highlighter-rouge">simple.ml</code>:</p>
<div class="language-ocaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">open</span> <span class="nc">GMain</span>
<span class="k">open</span> <span class="nc">GdkKeysyms</span>

<span class="k">let</span> <span class="n">locale</span> <span class="o">=</span> <span class="nn">GtkMain</span><span class="p">.</span><span class="nn">Main</span><span class="p">.</span><span class="n">init</span> <span class="bp">()</span>

<span class="k">let</span> <span class="n">main</span> <span class="bp">()</span> <span class="o">=</span>
  <span class="k">let</span> <span class="n">window</span> <span class="o">=</span> <span class="nn">GWindow</span><span class="p">.</span><span class="n">window</span> <span class="o">~</span><span class="n">width</span><span class="o">:</span><span class="mi">320</span> <span class="o">~</span><span class="n">height</span><span class="o">:</span><span class="mi">240</span>
                              <span class="o">~</span><span class="n">title</span><span class="o">:</span><span class="s2">"Simple lablgtk program"</span> <span class="bp">()</span> <span class="k">in</span>
  <span class="k">let</span> <span class="n">vbox</span> <span class="o">=</span> <span class="nn">GPack</span><span class="p">.</span><span class="n">vbox</span> <span class="o">~</span><span class="n">packing</span><span class="o">:</span><span class="n">window</span><span class="o">#</span><span class="n">add</span> <span class="bp">()</span> <span class="k">in</span>
  <span class="n">window</span><span class="o">#</span><span class="n">connect</span><span class="o">#</span><span class="n">destroy</span> <span class="o">~</span><span class="n">callback</span><span class="o">:</span><span class="nn">Main</span><span class="p">.</span><span class="n">quit</span><span class="p">;</span>

  <span class="c">(* Menu bar *)</span>
  <span class="k">let</span> <span class="n">menubar</span> <span class="o">=</span> <span class="nn">GMenu</span><span class="p">.</span><span class="n">menu_bar</span> <span class="o">~</span><span class="n">packing</span><span class="o">:</span><span class="n">vbox</span><span class="o">#</span><span class="n">pack</span> <span class="bp">()</span> <span class="k">in</span>
  <span class="k">let</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">GMenu</span><span class="p">.</span><span class="n">factory</span> <span class="n">menubar</span> <span class="k">in</span>
  <span class="k">let</span> <span class="n">accel_group</span> <span class="o">=</span> <span class="n">factory</span><span class="o">#</span><span class="n">accel_group</span> <span class="k">in</span>
  <span class="k">let</span> <span class="n">file_menu</span> <span class="o">=</span> <span class="n">factory</span><span class="o">#</span><span class="n">add_submenu</span> <span class="s2">"File"</span> <span class="k">in</span>

  <span class="c">(* File menu *)</span>
  <span class="k">let</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="nn">GMenu</span><span class="p">.</span><span class="n">factory</span> <span class="n">file_menu</span> <span class="o">~</span><span class="n">accel_group</span> <span class="k">in</span>
  <span class="n">factory</span><span class="o">#</span><span class="n">add_item</span> <span class="s2">"Quit"</span> <span class="o">~</span><span class="n">key</span><span class="o">:_</span><span class="nc">Q</span> <span class="o">~</span><span class="n">callback</span><span class="o">:</span> <span class="nn">Main</span><span class="p">.</span><span class="n">quit</span><span class="p">;</span>

  <span class="c">(* Button *)</span>
  <span class="k">let</span> <span class="n">button</span> <span class="o">=</span> <span class="nn">GButton</span><span class="p">.</span><span class="n">button</span> <span class="o">~</span><span class="n">label</span><span class="o">:</span><span class="s2">"Push me!"</span>
                              <span class="o">~</span><span class="n">packing</span><span class="o">:</span><span class="n">vbox</span><span class="o">#</span><span class="n">add</span> <span class="bp">()</span> <span class="k">in</span>
  <span class="n">button</span><span class="o">#</span><span class="n">connect</span><span class="o">#</span><span class="n">clicked</span> <span class="o">~</span><span class="n">callback</span><span class="o">:</span> <span class="p">(</span><span class="k">fun</span> <span class="bp">()</span> <span class="o">-&gt;</span> <span class="n">prerr_endline</span> <span class="s2">"Ouch!"</span><span class="p">);</span>

  <span class="c">(* Display the windows and enter Gtk+ main loop *)</span>
  <span class="n">window</span><span class="o">#</span><span class="n">add_accel_group</span> <span class="n">accel_group</span><span class="p">;</span>
  <span class="n">window</span><span class="o">#</span><span class="n">show</span> <span class="bp">()</span><span class="p">;</span>
  <span class="nn">Main</span><span class="p">.</span><span class="n">main</span> <span class="bp">()</span>

<span class="k">let</span> <span class="bp">()</span> <span class="o">=</span> <span class="n">main</span> <span class="bp">()</span>
</code></pre></div></div>

<p>You can install the dependencies and compile your code (no need to do so at this point):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ opam install lablgtk
$ ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple
$ ./simple
Ouch!
</code></pre></div></div>

<p>This is what you should see when you run it:</p>

<p><img src="https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png" alt="" /></p>

<h3 id="preparations">Preparations</h3>

<h4 id="import-gtk2-library">Import GTK2 library</h4>

<p>We need the GTK2 library, let’s grab it from <a href="https://github.com/flathub/shared-modules">Flathub shared-modules repo</a>:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git submodule add https://github.com/flathub/shared-modules.git
</code></pre></div></div>

<h4 id="wrapper-script">Wrapper script</h4>

<p><code class="language-plaintext highlighter-rouge">LD_LIBRARY_PATH</code> is empty by default when running Flatpak applications (<a href="https://github.com/flatpak/flatpak-builder/issues/474">flatpak/flatpak-builder#474</a>) so we will need a wrapper script <code class="language-plaintext highlighter-rouge">simple.sh</code> around the application:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/app/lib
<span class="nb">exec</span> /app/bin/simple
</code></pre></div></div>

<h3 id="building-from-sources">Building from sources</h3>

<p><code class="language-plaintext highlighter-rouge">lablgtk</code> can be built from its <a href="https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz">sources</a>.</p>

<h4 id="flatpak-manifest-1">Flatpak manifest</h4>

<p>Some things to note in the following manifest:</p>
<ul>
  <li>The SDK extension pointing to the <a href="https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml">Flatpak SDK Extension for OCaml</a> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L9-L10">↵</a></li>
  <li>Permissions for the Flatpak app to access X11 (<code class="language-plaintext highlighter-rouge">--share=ipc</code> and <code class="language-plaintext highlighter-rouge">--socket=fallback-x11</code>) <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L12-L14">↵</a></li>
  <li>The build options setting the <code class="language-plaintext highlighter-rouge">PATH</code> and some OCaml related environment variables <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L16-L19">↵</a></li>
  <li>For some reason <code class="language-plaintext highlighter-rouge">debuginfo</code> was breaking <code class="language-plaintext highlighter-rouge">ocamlfind</code>, so it has been disabled <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L20">↵</a></li>
  <li>We are importing GTK2 from the shared modules repository <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L23">↵</a></li>
  <li>Installing some <code class="language-plaintext highlighter-rouge">lablgtk</code> pre-requisites: <code class="language-plaintext highlighter-rouge">ocamlfind</code> and <code class="language-plaintext highlighter-rouge">camlp-streams</code> (required only with OCaml&gt;=5) <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L25-L49">↵</a></li>
  <li><code class="language-plaintext highlighter-rouge">lablgtk</code> is build from its <a href="https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz">sources</a> instead of using opam <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L51-L60">↵</a></li>
  <li>Installing the application to <code class="language-plaintext highlighter-rouge">/app/bin</code> and <code class="language-plaintext highlighter-rouge">lablgtk</code> library to <code class="language-plaintext highlighter-rouge">/app/lib</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L70-L71">↵</a></li>
  <li>Removal of the build files at the post-install phase to limit the size of the resulting Flatpak application <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L72-L73">↵</a></li>
  <li>Wrapper setup <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L75-L81">↵</a></li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">app-id</span><span class="pi">:</span> <span class="s">flatpak.ocaml.lablgtk.build</span>
<span class="na">runtime</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">runtime-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">22.08'</span>
<span class="na">sdk</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">sdk-extensions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">org.freedesktop.Sdk.Extension.ocaml</span>
<span class="na">command</span><span class="pi">:</span> <span class="s">simple.sh</span>
<span class="na">finish-args</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">--share=ipc</span>
  <span class="pi">-</span> <span class="s">--socket=fallback-x11</span>
<span class="na">build-options</span><span class="pi">:</span>
  <span class="na">append-path</span><span class="pi">:</span> <span class="s">/usr/lib/sdk/ocaml/bin:/app/share/runtime/ocaml</span>
  <span class="na">env</span><span class="pi">:</span>
    <span class="na">CAML_LD_LIBRARY_PATH</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/lib:/usr/lib/sdk/ocaml/lib/ocaml:/usr/lib/sdk/ocaml/lib/ocaml/stublibs</span>
    <span class="na">OCAMLFIND_CONF</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/findlib.conf</span>
  <span class="na">no-debuginfo</span><span class="pi">:</span> <span class="no">true</span>

<span class="na">modules</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">shared-modules/gtk2/gtk2.json</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">ocamlfind</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/ocamlfind</span>
        <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">mkdir -p ${FLATPAK_DEST}/share/runtime/ocaml</span>
      <span class="pi">-</span> <span class="s">./configure -bindir ${FLATPAK_DEST}/share/runtime/ocaml -config ${FLATPAK_DEST}/share/runtime/ocaml -no-topfind -sitelib ${FLATPAK_DEST}/share/runtime/ocaml/lib</span>
      <span class="pi">-</span> <span class="s">make all</span>
      <span class="pi">-</span> <span class="s">make install</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ocamlfind printconf</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">camlp-streams</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/camlp-streams</span>
        <span class="na">branch</span><span class="pi">:</span> <span class="s">trunk</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">dune build</span>
      <span class="pi">-</span> <span class="s">dune install --prefix /app/share/runtime/ocaml</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ocamlfind query camlp-streams</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">lablgtk</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">archive</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz</span>
        <span class="na">sha256</span><span class="pi">:</span> <span class="s">7b9e680452458fd351cf8622230d62c3078db528446384268cd0dc37be82143c</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./configure</span>
      <span class="pi">-</span> <span class="s">make world</span>
      <span class="pi">-</span> <span class="s">make old-install DESTDIR=/app/share/runtime/ocaml</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">file</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">simple.ml</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">mv /app/share/runtime/ocaml/usr/lib/sdk/ocaml/lib/ocaml/lablgtk2 /app/share/runtime/ocaml/lib</span>
      <span class="pi">-</span> <span class="s">ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple</span>
      <span class="pi">-</span> <span class="s">install -Dm755 simple -t /app/bin/</span>
      <span class="pi">-</span> <span class="s">mv /app/share/runtime/ocaml/usr/lib/sdk/ocaml/lib/ocaml/stublibs/dlllablgtk2.so /app/lib</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">rm -rf /app/share/runtime/ocaml</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">simple-wrapper</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">file</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">simple.sh</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">cp simple.sh /app/bin</span>
</code></pre></div></div>

<h4 id="install-and-run-the-application-1">Install and run the application</h4>

<p>Build and install the Flatpak package locally using <code class="language-plaintext highlighter-rouge">flatpak-builder</code>:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak-builder --force-clean build-dir flatpak.ocaml.lablgtk.build.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.lablgtk.build.yaml
</code></pre></div></div>

<p>Run the application:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak run flatpak.ocaml.lablgtk.build
Ouch!
</code></pre></div></div>

<p>This is what you should see when you run it:</p>

<p><img src="https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png" alt="" /></p>

<p>The application has an installed size of 34.8 MB:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak info flatpak.ocaml.lablgtk.build
          ID: flatpak.ocaml.lablgtk.build
         Ref: app/flatpak.ocaml.lablgtk.build/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: build-origin
  Collection:
Installation: user
   Installed: 34.8 MB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: 6acda68f932e9728d942e976b6d6b94cab2929eb4c91b087f58792028f18d536
     Subject: Export flatpak.ocaml.lablgtk.build
        Date: 2023-12-19 09:29:13 +0000
</code></pre></div></div>

<h3 id="building-with-opam">Building with opam</h3>

<h4 id="source-files">Source files</h4>

<p>We can leverage the <a href="https://opam.ocaml.org/">OCaml Package Manager (opam)</a> to install <code class="language-plaintext highlighter-rouge">lablgtk</code> into the Flatpak. For that, let’s leverage <a href="https://github.com/flatpak/flatpak-builder-tools">flatpak-builder-tools</a>, a collection of various scripts to aid in using <code class="language-plaintext highlighter-rouge">flatpak-builder</code> that among other things contains a <a href="https://github.com/flatpak/flatpak-builder-tools/tree/master/opam">helper tool</a> to automatically generate flatpak-builder source files from a <code class="language-plaintext highlighter-rouge">.json</code> generated by <code class="language-plaintext highlighter-rouge">opam tree</code>:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git clone https://github.com/flatpak/flatpak-builder-tools
$ cd flatpak-builder-tools/opam
$ opam tree --json=lablgtk.json lablgtk
$ ./flatpak-opam-generator.py lablgtk.json &gt; sources/lablgtk.json
</code></pre></div></div>

<p>The output sources file <code class="language-plaintext highlighter-rouge">sources/lablgtk.json</code> should look something like this:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"file"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://github.com/garrigue/lablgtk/archive/2.18.13.tar.gz"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"lablgtk.2.18.13"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"md5"</span><span class="p">:</span><span class="w"> </span><span class="s2">"d0a326b99475216cc22232e72c89415f"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cache/md5/d0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest-filename"</span><span class="p">:</span><span class="w"> </span><span class="s2">"d0a326b99475216cc22232e72c89415f"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"file"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://github.com/ocaml/camlp-streams/archive/v5.0.1.tar.gz"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"camlp-streams.5.0.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"md5"</span><span class="p">:</span><span class="w"> </span><span class="s2">"afc874b25f7a1f13e8f5cfc1182b51a7"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cache/md5/af"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest-filename"</span><span class="p">:</span><span class="w"> </span><span class="s2">"afc874b25f7a1f13e8f5cfc1182b51a7"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"file"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://github.com/ocaml/dune/releases/download/3.10.0/dune-3.10.0.tbz"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dune.3.10.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"sha256"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9ff03384a98a8df79852cc674f0b4738ba8aec17029b6e2eeb514f895e710355"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cache/sha256/9f"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest-filename"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9ff03384a98a8df79852cc674f0b4738ba8aec17029b6e2eeb514f895e710355"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"file"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://download.camlcity.org/download/findlib-1.9.6.tar.gz"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ocamlfind.1.9.6"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"md5"</span><span class="p">:</span><span class="w"> </span><span class="s2">"96c6ee50a32cca9ca277321262dbec57"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cache/md5/96"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dest-filename"</span><span class="p">:</span><span class="w"> </span><span class="s2">"96c6ee50a32cca9ca277321262dbec57"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<h4 id="generate-flatpak-manifest-code">Generate Flatpak manifest code</h4>

<p>Let’s use the helper tool to generate the corresponding Flatpak manifest code:</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">$ ./flatpak-opam-generator.py --generate lablgtk lablgtk.json</span>
<span class="nn">...</span>
<span class="c1"># Manifest code generated by flatpak-opam-generator</span>
<span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">lablgtk</span>
  <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
  <span class="na">sources</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">sources/lablgtk.json</span>
    <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
      <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
      <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/opam-repository</span>
  <span class="na">build-commands</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">ls -A --color=never | grep -Ev "cache|packages|repo" | xargs rm -rf</span>
    <span class="pi">-</span> <span class="s">opam admin filter -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6</span> 
    <span class="pi">-</span> <span class="s">opam admin cache</span>
    <span class="pi">-</span> <span class="s">opam repo add lablgtk .</span>
    <span class="pi">-</span> <span class="s">opam install -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6</span> 
    <span class="pi">-</span> <span class="s">opam repo remove --all lablgtk</span>
  <span class="na">post-install</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">opam info --field name,all-installed-versions lablgtk</span>
</code></pre></div></div>

<h4 id="flatpak-manifest-2">Flatpak manifest</h4>

<p>Some things to note in the following manifest:</p>
<ul>
  <li>The SDK extension pointing to the <a href="https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml">Flatpak SDK Extension for OCaml</a> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L9-L10">↵</a></li>
  <li>Permissions for the Flatpak app to access X11 (<code class="language-plaintext highlighter-rouge">--share=ipc</code> and <code class="language-plaintext highlighter-rouge">--socket=fallback-x11</code>) <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L12-L14">↵</a></li>
  <li>The build options setting the <code class="language-plaintext highlighter-rouge">PATH</code> and some OCaml related environment variables <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L15-L22">↵</a></li>
  <li>We are importing GTK2 from the shared modules repository <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L25">↵</a></li>
  <li>Creation of a new switch for installing <code class="language-plaintext highlighter-rouge">lablgtk</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L27-L44">↵</a></li>
  <li>The manifest code generated by flatpak-opam-generator for <code class="language-plaintext highlighter-rouge">lablgtk</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L46-L62">↵</a></li>
  <li>Installing the application to <code class="language-plaintext highlighter-rouge">/app/bin</code> and <code class="language-plaintext highlighter-rouge">lablgtk</code> library to <code class="language-plaintext highlighter-rouge">/app/lib</code> <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L71-L72">↵</a></li>
  <li>Removal of the ocaml switch at the post-install phase to limit the size of the resulting Flatpak application <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L73-L74">↵</a></li>
  <li>Wrapper setup <a href="https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L76-L82">↵</a></li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">app-id</span><span class="pi">:</span> <span class="s">flatpak.ocaml.lablgtk.switch</span>
<span class="na">runtime</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">runtime-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">22.08'</span>
<span class="na">sdk</span><span class="pi">:</span> <span class="s">org.freedesktop.Sdk</span>
<span class="na">sdk-extensions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">org.freedesktop.Sdk.Extension.ocaml</span>
<span class="na">command</span><span class="pi">:</span> <span class="s">simple.sh</span>
<span class="na">finish-args</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">--share=ipc</span>
  <span class="pi">-</span> <span class="s">--socket=fallback-x11</span>
<span class="na">build-options</span><span class="pi">:</span>
  <span class="na">append-path</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/bin:/app/share/runtime/ocaml/switch/_opam/bin:/usr/lib/sdk/ocaml/bin</span>
  <span class="na">env</span><span class="pi">:</span>
    <span class="na">CAML_LD_LIBRARY_PATH</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/switch/_opam/lib/stublibs:/app/share/runtime/ocaml/switch/_opam/lib/ocaml/stublibs:/app/share/runtime/ocaml/switch/_opam/lib/ocaml</span>
    <span class="na">OCAML_TOPLEVEL_PATH</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/switch/_opam/lib/toplevel</span>
    <span class="na">OPAMROOT</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml</span>
    <span class="na">OPAMSWITCH</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/switch</span>
    <span class="na">OPAM_SWITCH_PREFIX</span><span class="pi">:</span> <span class="s">/app/share/runtime/ocaml/switch/_opam</span>

<span class="na">modules</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">shared-modules/gtk2/gtk2.json</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">switch</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
        <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/opam-repository</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">archive</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/ocaml/archive/refs/tags/5.1.0.tar.gz</span>
        <span class="na">dest</span><span class="pi">:</span> <span class="s">switch</span>
        <span class="na">sha256</span><span class="pi">:</span> <span class="s">43a3ac7aab7f8880f2bb6221317be55319b356e517622fdc28359fe943e6a450</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">mkdir -p ${FLATPAK_DEST}/share/runtime/ocaml</span>
      <span class="pi">-</span> <span class="s">mv switch ${FLATPAK_DEST}/share/runtime/ocaml</span>
      <span class="pi">-</span> <span class="s">opam init -y --bare --disable-sandboxing .</span>
      <span class="pi">-</span> <span class="s">opam switch create -y --deps-only ${FLATPAK_DEST}/share/runtime/ocaml/switch</span>
      <span class="pi">-</span> <span class="s">opam pin -y ${FLATPAK_DEST}/share/runtime/ocaml/switch</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">opam switch list</span>

  <span class="c1"># Manifest code generated by flatpak-opam-generator</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">lablgtk</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">sources/lablgtk.json</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
        <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s">https://github.com/ocaml/opam-repository</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ls -A --color=never | grep -Ev "cache|packages|repo" | xargs rm -rf</span>
      <span class="pi">-</span> <span class="s">opam admin filter -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6</span>
      <span class="pi">-</span> <span class="s">opam admin cache</span>
      <span class="pi">-</span> <span class="s">opam repo add lablgtk .</span>
      <span class="pi">-</span> <span class="s">opam install -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6</span>
      <span class="pi">-</span> <span class="s">opam repo remove --all lablgtk</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">opam info --field name,all-installed-versions lablgtk</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">file</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">simple.ml</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple</span>
      <span class="pi">-</span> <span class="s">install -Dm755 simple -t /app/bin/</span>
      <span class="pi">-</span> <span class="s">cp /app/share/runtime/ocaml/switch/_opam/lib/stublibs/dlllablgtk2.so /app/lib</span>
    <span class="na">post-install</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">rm -rf /app/share/runtime/ocaml</span>

  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">simple-wrapper</span>
    <span class="na">buildsystem</span><span class="pi">:</span> <span class="s">simple</span>
    <span class="na">sources</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">file</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">simple.sh</span>
    <span class="na">build-commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">cp simple.sh /app/bin</span>
</code></pre></div></div>

<h4 id="install-and-run-the-application-2">Install and run the application</h4>

<p>Build and install the Flatpak package locally using <code class="language-plaintext highlighter-rouge">flatpak-builder</code>:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak-builder --force-clean build-dir flatpak.ocaml.lablgtk.switch.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.lablgtk.switch.yaml
</code></pre></div></div>

<p>Run the application:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak run flatpak.ocaml.lablgtk.switch
Ouch!
</code></pre></div></div>

<p>This is what you should see when you run it:</p>

<p><img src="https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png" alt="" /></p>

<p>The application has an installed size of 11.3 MB:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flatpak info flatpak.ocaml.lablgtk.switch
          ID: flatpak.ocaml.lablgtk.switch
         Ref: app/flatpak.ocaml.lablgtk.switch/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: lablgtk-origin
  Collection:
Installation: user
   Installed: 11.3 MB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: b3159cf05f2d89d7caaae3bc7bc6fd6a2ab70d5195374b4222a3cbedf8f635b0
      Parent: 499a0892394a54c93976d422aa533563b6a1b1212fd9036fbc4fcbdd023f87dd
     Subject: Export flatpak.ocaml.lablgtk.switch
        Date: 2023-10-16 12:01:01 +0000
</code></pre></div></div>

<h2 id="publish-the-application">Publish the application</h2>

<p>Info on how to later publish the application on <a href="https://flathub.org/">Flathub</a> can be found <a href="https://docs.flathub.org/docs/for-app-authors/submission/">here</a>.</p>

<iframe src="https://ghbtns.com/github-btn.html?user=josecastillolema&amp;type=follow&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="230" height="30" title="GitHub"></iframe>]]></content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="en" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">PHYSICS 8th General Assembly</title><link href="https://josecastillolema.github.io/physics-ga8/" rel="alternate" type="text/html" title="PHYSICS 8th General Assembly" /><published>2023-11-19T00:00:00-06:00</published><updated>2023-11-19T00:00:00-06:00</updated><id>https://josecastillolema.github.io/physics-ga8</id><content type="html" xml:base="https://josecastillolema.github.io/physics-ga8/"><![CDATA[<p><a href="/physics"><img src="/assets/images/posts/2022-09-20-physics-ga4/1.png" alt="" /></a></p>

<p>The <a href="/physics">PHYSICS project</a>, held its 8th General Assembly meeting on November 8th – 9th, 2023, in Florence, Italy. Hosted by GFT, the meeting provided an opportunity for partners to present updates on task progress and deliverables, as well as discuss upcoming project results. The coordinator and leaders of the work packages (WP) led discussions on any outstanding issues, fostering active participation and constructive feedback.</p>

<p>The meeting was conducted using a hybrid format, accommodating both in-person and remote attendees. Among the meeting’s key objectives were the status of PHYSICS’ 2nd Iteration Pilot Implementation, the finalization of the Final Review demo, and the definition of the Final Review agenda and logistics.</p>

<p><img src="/assets/images/posts/2023-11-19-physics-ga8.jpg" alt="" /></p>]]></content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="networks" /><category term="redhat" /><category term="research" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">diff.blog</title><link href="https://josecastillolema.github.io/diff-blog/" rel="alternate" type="text/html" title="diff.blog" /><published>2023-10-29T00:00:00-05:00</published><updated>2023-10-29T00:00:00-05:00</updated><id>https://josecastillolema.github.io/diff-blog</id><content type="html" xml:base="https://josecastillolema.github.io/diff-blog/"><![CDATA[<p><a href="https://diff.blog/"><img src="/assets/images/posts/2023-10-29-diff-blog/1.png" alt="" /></a></p>

<p><a href="https://diff.blog/">diff.blog</a> is a platform that helps you discover and follow amazing developer blogs. Whether your interests are in Python, Rust, AI, Distributed Systems or XYZ diff.blog has got amazing blogs for you to follow!</p>

<h3 id="how-is-it-different-from-medium">How is it different from Medium?</h3>

<p>Unlike Medium does not host any blogs, merely acts as a platform that makes it easier to discover and subscribe to blogs. So you own your own blog and content. You can host your blog in a Wordpress site, GitHub pages, Ghost, or wherever you want. This means even if diff.blog shut downs one day it won’t affect your blog at all.</p>

<h3 id="why-diffblog">Why diff.blog?</h3>

<p>There are a lot of amazing developer blogs in the Internet. But very few of them gets visibility. Because of this visibility issue a lot of the developers blogs are shutting down or is moving to Medium in search of views. Developers should be able to own their blog without having to compromise on the views. Blogs are probably the last remaining bits of Internet, a network that was supposed to be decentralized and not owned by a few companies. diff.blog’s mission is to bring the audience back to the blogs and make blogs popular again.</p>

<h3 id="how-does-it-work">How does it work?</h3>

<p>The underlying engine of diff.blog is similar to an RSS reader. All most all the blogs have RSS feed. RSS feeds makes it really easy to keep updated with the posts of a blog. No blockchain. Nothing fancy. It’s just a file. You can read more about RSS feeds at https://www.youneedfeeds.com/.</p>

<h3 id="profile">Profile</h3>

<p><a href="https://diff.blog/josecastillolema/">https://diff.blog/josecastillolema/</a>
<a href="https://diff.blog/josecastillolema/"><img src="/assets/images/posts/2023-10-29-diff-blog/2.png" alt="" /></a></p>]]></content><author><name>Jose Castillo Lema</name></author><category term="en" /><summary type="html"><![CDATA[]]></summary></entry></feed>