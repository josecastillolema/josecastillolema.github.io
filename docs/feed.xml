<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://josecastillolema.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://josecastillolema.github.io/" rel="alternate" type="text/html" /><updated>2024-01-04T04:24:14-06:00</updated><id>https://josecastillolema.github.io/feed.xml</id><title type="html">GitOps</title><subtitle>Networks, SDN, NFVi, OpenStack, K8s/OpenShift.</subtitle><author><name>Jose Castillo Lema</name></author><entry><title type="html">Flatpak SDK Extension for OCaml</title><link href="https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml/" rel="alternate" type="text/html" title="Flatpak SDK Extension for OCaml" /><published>2024-01-04T00:00:00-06:00</published><updated>2024-01-04T14:00:58-06:00</updated><id>https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml</id><content type="html" xml:base="https://josecastillolema.github.io/org-freedesktop-sdk-ext-ocaml/">&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=flathub&amp;amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;amp;type=watch&amp;amp;count=true&amp;amp;size=large&amp;amp;v=2&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;130&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=flathub&amp;amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;amp;type=star&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;115&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=flathub&amp;amp;repo=org.freedesktop.Sdk.Extension.ocaml&amp;amp;type=fork&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;170&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;sdk-extension-for-ocaml-stable&quot;&gt;SDK Extension for OCaml stable&lt;/h1&gt;

&lt;p&gt;This extension contains various components of the &lt;a href=&quot;https://ocaml.org/&quot;&gt;OCaml&lt;/a&gt; stable toolchain.&lt;/p&gt;

&lt;p&gt;Includes the &lt;a href=&quot;https://dune.build/&quot;&gt;Dune build system&lt;/a&gt; and the OCaml Package Manager &lt;a href=&quot;https://opam.ocaml.org/&quot;&gt;opam&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;create-flatpak-ocaml-applications&quot;&gt;Create Flatpak OCaml applications&lt;/h2&gt;

&lt;p&gt;Several examples on how to Flatpak OCaml applications leveraging this SDK can be found &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;debugging&quot;&gt;Debugging&lt;/h2&gt;

&lt;p&gt;In order to use this extension in a Flatpak SDK environment you may add all provided tools in your PATH by executing first:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source /usr/lib/sdk/ocaml/enable.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-packages-interactivelly&quot;&gt;Install packages interactivelly&lt;/h2&gt;

&lt;p&gt;In order to interactivelly install &lt;a href=&quot;https://opam.ocaml.org/&quot;&gt;OCaml Package Manager (opam)&lt;/a&gt; packages in a Flatpak environmment you will need to inicialize a new environment:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ opam init --disable-sandboxing --no-setup --root $XDG_DATA_HOME/ocaml
$ eval $(opam env --root=$XDG_DATA_HOME/ocaml --switch=default --set-root --set-switch)

$ opam switch
#  switch   compiler     description
→  default  ocaml.5.1.0  default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;development&quot;&gt;Development&lt;/h2&gt;
&lt;p&gt;To use the SDK with your favourite editor:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml com.visualstudio.code
$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml org.gnu.emacs
$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=ocaml io.neovim.nvim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or just use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FLATPAK_ENABLE_SDK_EXT=*&lt;/code&gt; to load every SDK available in your system:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=* com.visualstudio.code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When running your editor you should see something like this, i.e.:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak run com.visualstudio.code
flatpak-vscode: Enabling SDK extension &quot;ocaml&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;type=follow&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;230&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;</content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="en" /><category term="redhat" /><summary type="html"></summary></entry><entry><title type="html">Happy new year!</title><link href="https://josecastillolema.github.io/newyear24/" rel="alternate" type="text/html" title="Happy new year!" /><published>2024-01-01T00:00:00-06:00</published><updated>2024-01-01T14:00:58-06:00</updated><id>https://josecastillolema.github.io/newyear24</id><content type="html" xml:base="https://josecastillolema.github.io/newyear24/">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2024-01-01-newyear24/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2024-01-01-newyear24/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2024-01-01-newyear24/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="es" /><category term="redhat" /><category term="pt" /><summary type="html"></summary></entry><entry><title type="html">How to Flatpak OCaml applications</title><link href="https://josecastillolema.github.io/flatpak-ocaml/" rel="alternate" type="text/html" title="How to Flatpak OCaml applications" /><published>2023-12-19T00:00:00-06:00</published><updated>2023-12-19T14:00:58-06:00</updated><id>https://josecastillolema.github.io/flatpak-ocaml</id><content type="html" xml:base="https://josecastillolema.github.io/flatpak-ocaml/">&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=flatpak-ocaml-examples&amp;amp;type=watch&amp;amp;count=true&amp;amp;size=large&amp;amp;v=2&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;130&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=flatpak-ocaml-examples&amp;amp;type=star&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;115&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=flatpak-ocaml-examples&amp;amp;type=fork&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;170&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;how-to-flatpak-an-ocaml-application&quot;&gt;How to Flatpak an OCaml application&lt;/h1&gt;

&lt;p&gt;Let’s take a couple &lt;a href=&quot;https://ocaml.org/&quot;&gt;OCaml&lt;/a&gt; applications to illustrate &lt;a href=&quot;https://flatpak.org/&quot;&gt;Flatpak&lt;/a&gt; distributing and packaging leveraging the &lt;a href=&quot;https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml&quot;&gt;Flatpak SDK Extension for OCaml&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a hello world CLI application&lt;/li&gt;
  &lt;li&gt;a simple GTK program from the &lt;a href=&quot;https://v2.ocaml.org/learn/tutorials/introduction_to_gtk.html&quot;&gt;Introduction to Gtk&lt;/a&gt; OCaml tutorial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The SDK is only needed during the building phase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-flatpak-an-ocaml-application&quot;&gt;How to Flatpak an OCaml application&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#creating-a-hello-world-cli-application&quot;&gt;Creating a hello world CLI application&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#flatpak-manifest&quot;&gt;Flatpak manifest&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#install-and-run-the-application&quot;&gt;Install and run the application&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#creating-a-simple-gtk-program&quot;&gt;Creating a simple GTK program&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#preparations&quot;&gt;Preparations&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#import-gtk2-library&quot;&gt;Import GTK2 library&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#wrapper-script&quot;&gt;Wrapper script&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#building-from-sources&quot;&gt;Building from sources&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#flatpak-manifest-1&quot;&gt;Flatpak manifest&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#install-and-run-the-application-1&quot;&gt;Install and run the application&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#building-with-opam&quot;&gt;Building with opam&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#source-files&quot;&gt;Source files&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#generate-flatpak-manifest-code&quot;&gt;Generate Flatpak manifest code&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#flatpak-manifest-2&quot;&gt;Flatpak manifest&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#install-and-run-the-application-2&quot;&gt;Install and run the application&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#publish-the-application&quot;&gt;Publish the application&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-a-hello-world-cli-application&quot;&gt;Creating a hello world CLI application&lt;/h2&gt;

&lt;p&gt;Create a hello world &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.ml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-ocaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_endline&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can compile your code with the OCaml compiler &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ocamlopt&lt;/code&gt; (no need to do so at this point):&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ocamlopt -o example example.ml
$ ./example
hello world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;flatpak-manifest&quot;&gt;Flatpak manifest&lt;/h3&gt;

&lt;p&gt;Some things to note in the following manifest:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The SDK extension pointing to the &lt;a href=&quot;https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml&quot;&gt;Flatpak SDK Extension for OCaml&lt;/a&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L9-L10&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The build options setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PATH&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L13-L14&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Build some pre-requisistes using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dune&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L17-L24&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Installing the application to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/app/bin&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.example.yaml#L33&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;app-id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flatpak.ocaml.example&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22.08&apos;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk-extensions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk.Extension.ocaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;example&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;build-options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;append-path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/lib/sdk/ocaml/bin&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;camlp-streams&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/camlp-streams&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;trunk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dune build&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;example&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;example.ml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlopt -o example example.ml&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install -Dm755 example -t /app/bin/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;install-and-run-the-application&quot;&gt;Install and run the application&lt;/h3&gt;

&lt;p&gt;Build and install the Flatpak package locally using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flatpak-builder&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak-builder --force-clean build-dir flatpak.ocaml.example.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.example.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run the application:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak run flatpak.ocaml.example
hello world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The application has an installed size of 369.2 kB:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak info flatpak.ocaml.example
          ID: flatpak.ocaml.example
         Ref: app/flatpak.ocaml.example/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: example-origin
  Collection:
Installation: user
   Installed: 368.3 kB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: 02386f983e23b6d991651e86c1b1a55531fd4fa6504c730c938bc06033c19f40
     Subject: Export flatpak.ocaml.example
        Date: 2023-10-09 12:34:32 +0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-a-simple-gtk-program&quot;&gt;Creating a simple GTK program&lt;/h2&gt;

&lt;p&gt;Let’s use the simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; program from the &lt;a href=&quot;https://v2.ocaml.org/learn/tutorials/introduction_to_gtk.html&quot;&gt;Introduction to Gtk&lt;/a&gt; OCaml tutorial &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple.ml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-ocaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GMain&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GdkKeysyms&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GtkMain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Simple lablgtk program&quot;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GPack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destroy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;(* Menu bar *)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menubar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu_bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menubar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accel_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accel_group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_submenu&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;File&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;(* File menu *)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accel_group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_item&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Quit&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:_&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;(* Button *)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Push me!&quot;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clicked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prerr_endline&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ouch!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;(* Display the windows and enter Gtk+ main loop *)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_accel_group&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accel_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can install the dependencies and compile your code (no need to do so at this point):&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ opam install lablgtk
$ ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple
$ ./simple
Ouch!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is what you should see when you run it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;preparations&quot;&gt;Preparations&lt;/h3&gt;

&lt;h4 id=&quot;import-gtk2-library&quot;&gt;Import GTK2 library&lt;/h4&gt;

&lt;p&gt;We need the GTK2 library, let’s grab it from &lt;a href=&quot;https://github.com/flathub/shared-modules&quot;&gt;Flathub shared-modules repo&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git submodule add https://github.com/flathub/shared-modules.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;wrapper-script&quot;&gt;Wrapper script&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LD_LIBRARY_PATH&lt;/code&gt; is empty by default when running Flatpak applications (&lt;a href=&quot;https://github.com/flatpak/flatpak-builder/issues/474&quot;&gt;flatpak/flatpak-builder#474&lt;/a&gt;) so we will need a wrapper script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple.sh&lt;/code&gt; around the application:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/app/lib
&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; /app/bin/simple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;building-from-sources&quot;&gt;Building from sources&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; can be built from its &lt;a href=&quot;https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz&quot;&gt;sources&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;flatpak-manifest-1&quot;&gt;Flatpak manifest&lt;/h4&gt;

&lt;p&gt;Some things to note in the following manifest:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The SDK extension pointing to the &lt;a href=&quot;https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml&quot;&gt;Flatpak SDK Extension for OCaml&lt;/a&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L9-L10&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Permissions for the Flatpak app to access X11 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--share=ipc&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--socket=fallback-x11&lt;/code&gt;) &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L12-L14&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The build options setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PATH&lt;/code&gt; and some OCaml related environment variables &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L16-L19&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;For some reason &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debuginfo&lt;/code&gt; was breaking &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ocamlfind&lt;/code&gt;, so it has been disabled &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L20&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;We are importing GTK2 from the shared modules repository &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L23&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Installing some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; pre-requisites: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ocamlfind&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;camlp-streams&lt;/code&gt; (required only with OCaml&amp;gt;=5) &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L25-L49&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; is build from its &lt;a href=&quot;https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz&quot;&gt;sources&lt;/a&gt; instead of using opam &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L51-L60&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Installing the application to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/app/bin&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; library to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/app/lib&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L70-L71&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Removal of the build files at the post-install phase to limit the size of the resulting Flatpak application &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L72-L73&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Wrapper setup &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.build.yaml#L75-L81&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;app-id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flatpak.ocaml.lablgtk.build&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22.08&apos;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk-extensions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk.Extension.ocaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.sh&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;finish-args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--share=ipc&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--socket=fallback-x11&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;build-options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;append-path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/lib/sdk/ocaml/bin:/app/share/runtime/ocaml&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;CAML_LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/lib:/usr/lib/sdk/ocaml/lib/ocaml:/usr/lib/sdk/ocaml/lib/ocaml/stublibs&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;OCAMLFIND_CONF&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/findlib.conf&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;no-debuginfo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shared-modules/gtk2/gtk2.json&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlfind&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/ocamlfind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mkdir -p ${FLATPAK_DEST}/share/runtime/ocaml&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./configure -bindir ${FLATPAK_DEST}/share/runtime/ocaml -config ${FLATPAK_DEST}/share/runtime/ocaml -no-topfind -sitelib ${FLATPAK_DEST}/share/runtime/ocaml/lib&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make all&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make install&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlfind printconf&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;camlp-streams&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/camlp-streams&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;trunk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dune build&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dune install --prefix /app/share/runtime/ocaml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlfind query camlp-streams&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lablgtk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;archive&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/garrigue/lablgtk/archive/refs/tags/2.18.13.tar.gz&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;7b9e680452458fd351cf8622230d62c3078db528446384268cd0dc37be82143c&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./configure&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make world&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make old-install DESTDIR=/app/share/runtime/ocaml&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.ml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /app/share/runtime/ocaml/usr/lib/sdk/ocaml/lib/ocaml/lablgtk2 /app/share/runtime/ocaml/lib&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install -Dm755 simple -t /app/bin/&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv /app/share/runtime/ocaml/usr/lib/sdk/ocaml/lib/ocaml/stublibs/dlllablgtk2.so /app/lib&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rm -rf /app/share/runtime/ocaml&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple-wrapper&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.sh&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp simple.sh /app/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;install-and-run-the-application-1&quot;&gt;Install and run the application&lt;/h4&gt;

&lt;p&gt;Build and install the Flatpak package locally using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flatpak-builder&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak-builder --force-clean build-dir flatpak.ocaml.lablgtk.build.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.lablgtk.build.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run the application:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak run flatpak.ocaml.lablgtk.build
Ouch!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is what you should see when you run it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The application has an installed size of 34.8 MB:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak info flatpak.ocaml.lablgtk.build
          ID: flatpak.ocaml.lablgtk.build
         Ref: app/flatpak.ocaml.lablgtk.build/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: build-origin
  Collection:
Installation: user
   Installed: 34.8 MB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: 6acda68f932e9728d942e976b6d6b94cab2929eb4c91b087f58792028f18d536
     Subject: Export flatpak.ocaml.lablgtk.build
        Date: 2023-12-19 09:29:13 +0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;building-with-opam&quot;&gt;Building with opam&lt;/h3&gt;

&lt;h4 id=&quot;source-files&quot;&gt;Source files&lt;/h4&gt;

&lt;p&gt;We can leverage the &lt;a href=&quot;https://opam.ocaml.org/&quot;&gt;OCaml Package Manager (opam)&lt;/a&gt; to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; into the Flatpak. For that, let’s leverage &lt;a href=&quot;https://github.com/josecastillolema/flatpak-opam-generator&quot;&gt;flatpak-opam-generator&lt;/a&gt;, a helper tool to automatically generate flatpak-builder source files from a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.json&lt;/code&gt; generated by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opam tree&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ opam tree --json=lablgtk.json lablgtk
$ ./flatpak-opam-generator.py lablgtk.json &amp;gt; sources/lablgtk.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output sources file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sources/lablgtk.json&lt;/code&gt; should look something like this:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/garrigue/lablgtk/archive/2.18.13.tar.gz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lablgtk.2.18.13&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;md5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;d0a326b99475216cc22232e72c89415f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache/md5/d0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest-filename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;d0a326b99475216cc22232e72c89415f&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/ocaml/camlp-streams/archive/v5.0.1.tar.gz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;camlp-streams.5.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;md5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;afc874b25f7a1f13e8f5cfc1182b51a7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache/md5/af&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest-filename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;afc874b25f7a1f13e8f5cfc1182b51a7&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/ocaml/dune/releases/download/3.10.0/dune-3.10.0.tbz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dune.3.10.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sha256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9ff03384a98a8df79852cc674f0b4738ba8aec17029b6e2eeb514f895e710355&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache/sha256/9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest-filename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9ff03384a98a8df79852cc674f0b4738ba8aec17029b6e2eeb514f895e710355&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://download.camlcity.org/download/findlib-1.9.6.tar.gz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ocamlfind.1.9.6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;md5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;96c6ee50a32cca9ca277321262dbec57&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cache/md5/96&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dest-filename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;96c6ee50a32cca9ca277321262dbec57&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;generate-flatpak-manifest-code&quot;&gt;Generate Flatpak manifest code&lt;/h4&gt;

&lt;p&gt;Let’s use the helper tool to generate the corresponding Flatpak manifest code:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;$ ./flatpak-opam-generator.py --generate lablgtk lablgtk.json&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Manifest code generated by flatpak-opam-generator&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lablgtk&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sources/lablgtk.json&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/opam-repository&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ls -A --color=never | grep -Ev &quot;cache|packages|repo&quot; | xargs rm -rf&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam admin filter -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam admin cache&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam repo add lablgtk .&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam install -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam repo remove --all lablgtk&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam info --field name,all-installed-versions lablgtk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;flatpak-manifest-2&quot;&gt;Flatpak manifest&lt;/h4&gt;

&lt;p&gt;Some things to note in the following manifest:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The SDK extension pointing to the &lt;a href=&quot;https://github.com/flathub/org.freedesktop.Sdk.Extension.ocaml&quot;&gt;Flatpak SDK Extension for OCaml&lt;/a&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L9-L10&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Permissions for the Flatpak app to access X11 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--share=ipc&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--socket=fallback-x11&lt;/code&gt;) &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L12-L14&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The build options setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PATH&lt;/code&gt; and some OCaml related environment variables &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L15-L22&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;We are importing GTK2 from the shared modules repository &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L25&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Creation of a new switch for installing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L27-L44&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The manifest code generated by flatpak-opam-generator for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L46-L62&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Installing the application to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/app/bin&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lablgtk&lt;/code&gt; library to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/app/lib&lt;/code&gt; &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L71-L72&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Removal of the ocaml switch at the post-install phase to limit the size of the resulting Flatpak application &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L73-L74&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Wrapper setup &lt;a href=&quot;https://github.com/josecastillolema/flatpak-ocaml-examples/blob/main/flatpak.ocaml.lablgtk.switch.yaml#L76-L82&quot;&gt;↵&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;app-id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flatpak.ocaml.lablgtk.switch&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;runtime-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22.08&apos;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sdk-extensions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.freedesktop.Sdk.Extension.ocaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.sh&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;finish-args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--share=ipc&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--socket=fallback-x11&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;build-options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;append-path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/bin:/app/share/runtime/ocaml/switch/_opam/bin:/usr/lib/sdk/ocaml/bin&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;CAML_LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/switch/_opam/lib/stublibs:/app/share/runtime/ocaml/switch/_opam/lib/ocaml/stublibs:/app/share/runtime/ocaml/switch/_opam/lib/ocaml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;OCAML_TOPLEVEL_PATH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/switch/_opam/lib/toplevel&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;OPAMROOT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;OPAMSWITCH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/switch&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;OPAM_SWITCH_PREFIX&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/app/share/runtime/ocaml/switch/_opam&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shared-modules/gtk2/gtk2.json&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;switch&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/opam-repository&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;archive&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/ocaml/archive/refs/tags/5.1.0.tar.gz&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;switch&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;43a3ac7aab7f8880f2bb6221317be55319b356e517622fdc28359fe943e6a450&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mkdir -p ${FLATPAK_DEST}/share/runtime/ocaml&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mv switch ${FLATPAK_DEST}/share/runtime/ocaml&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam init -y --bare --disable-sandboxing .&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam switch create -y --deps-only ${FLATPAK_DEST}/share/runtime/ocaml/switch&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam pin -y ${FLATPAK_DEST}/share/runtime/ocaml/switch&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam switch list&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Manifest code generated by flatpak-opam-generator&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lablgtk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sources/lablgtk.json&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/ocaml/opam-repository&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ls -A --color=never | grep -Ev &quot;cache|packages|repo&quot; | xargs rm -rf&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam admin filter -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam admin cache&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam repo add lablgtk .&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam install -y lablgtk.2.18.13 camlp-streams.5.0.1 dune.3.10.0 ocamlfind.1.9.6&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam repo remove --all lablgtk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opam info --field name,all-installed-versions lablgtk&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.ml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ocamlfind ocamlopt -package lablgtk2 -linkpkg simple.ml -o simple&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install -Dm755 simple -t /app/bin/&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp /app/share/runtime/ocaml/switch/_opam/lib/stublibs/dlllablgtk2.so /app/lib&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;post-install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rm -rf /app/share/runtime/ocaml&lt;/span&gt;

  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple-wrapper&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildsystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;file&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;simple.sh&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;build-commands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp simple.sh /app/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;install-and-run-the-application-2&quot;&gt;Install and run the application&lt;/h4&gt;

&lt;p&gt;Build and install the Flatpak package locally using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flatpak-builder&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak-builder --force-clean build-dir flatpak.ocaml.lablgtk.switch.yaml
$ flatpak-builder --user --install --force-clean build-dir flatpak.ocaml.lablgtk.switch.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run the application:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak run flatpak.ocaml.lablgtk.switch
Ouch!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is what you should see when you run it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/josecastillolema/flatpak-ocaml-examples/main/img/simple.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The application has an installed size of 11.3 MB:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak info flatpak.ocaml.lablgtk.switch
          ID: flatpak.ocaml.lablgtk.switch
         Ref: app/flatpak.ocaml.lablgtk.switch/x86_64/master
        Arch: x86_64
      Branch: master
      Origin: lablgtk-origin
  Collection:
Installation: user
   Installed: 11.3 MB
     Runtime: org.freedesktop.Sdk/x86_64/22.08
         Sdk: org.freedesktop.Sdk/x86_64/22.08
      Commit: b3159cf05f2d89d7caaae3bc7bc6fd6a2ab70d5195374b4222a3cbedf8f635b0
      Parent: 499a0892394a54c93976d422aa533563b6a1b1212fd9036fbc4fcbdd023f87dd
     Subject: Export flatpak.ocaml.lablgtk.switch
        Date: 2023-10-16 12:01:01 +0000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;publish-the-application&quot;&gt;Publish the application&lt;/h2&gt;

&lt;p&gt;Info on how to later publish the application on &lt;a href=&quot;https://flathub.org/&quot;&gt;Flathub&lt;/a&gt; can be found &lt;a href=&quot;https://docs.flathub.org/docs/for-app-authors/submission/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;type=follow&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;230&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;</content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="en" /><summary type="html"></summary></entry><entry><title type="html">PHYSICS 8th General Assembly</title><link href="https://josecastillolema.github.io/physics-ga8/" rel="alternate" type="text/html" title="PHYSICS 8th General Assembly" /><published>2023-11-19T00:00:00-06:00</published><updated>2023-11-19T14:00:58-06:00</updated><id>https://josecastillolema.github.io/physics-ga8</id><content type="html" xml:base="https://josecastillolema.github.io/physics-ga8/">&lt;p&gt;&lt;a href=&quot;/physics&quot;&gt;&lt;img src=&quot;/assets/images/posts/2022-09-20-physics-ga4/1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;/physics&quot;&gt;PHYSICS project&lt;/a&gt;, held its 8th General Assembly meeting on November 8th – 9th, 2023, in Florence, Italy. Hosted by GFT, the meeting provided an opportunity for partners to present updates on task progress and deliverables, as well as discuss upcoming project results. The coordinator and leaders of the work packages (WP) led discussions on any outstanding issues, fostering active participation and constructive feedback.&lt;/p&gt;

&lt;p&gt;The meeting was conducted using a hybrid format, accommodating both in-person and remote attendees. Among the meeting’s key objectives were the status of PHYSICS’ 2nd Iteration Pilot Implementation, the finalization of the Final Review demo, and the definition of the Final Review agenda and logistics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2023-11-19-physics-ga8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="networks" /><category term="redhat" /><category term="research" /><summary type="html"></summary></entry><entry><title type="html">diff.blog</title><link href="https://josecastillolema.github.io/diff-blog/" rel="alternate" type="text/html" title="diff.blog" /><published>2023-10-29T00:00:00-05:00</published><updated>2023-10-29T15:00:58-05:00</updated><id>https://josecastillolema.github.io/diff-blog</id><content type="html" xml:base="https://josecastillolema.github.io/diff-blog/">&lt;p&gt;&lt;a href=&quot;https://diff.blog/&quot;&gt;&lt;img src=&quot;/assets/images/posts/2023-10-29-diff-blog/1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://diff.blog/&quot;&gt;diff.blog&lt;/a&gt; is a platform that helps you discover and follow amazing developer blogs. Whether your interests are in Python, Rust, AI, Distributed Systems or XYZ diff.blog has got amazing blogs for you to follow!&lt;/p&gt;

&lt;h3 id=&quot;how-is-it-different-from-medium&quot;&gt;How is it different from Medium?&lt;/h3&gt;

&lt;p&gt;Unlike Medium does not host any blogs, merely acts as a platform that makes it easier to discover and subscribe to blogs. So you own your own blog and content. You can host your blog in a Wordpress site, GitHub pages, Ghost, or wherever you want. This means even if diff.blog shut downs one day it won’t affect your blog at all.&lt;/p&gt;

&lt;h3 id=&quot;why-diffblog&quot;&gt;Why diff.blog?&lt;/h3&gt;

&lt;p&gt;There are a lot of amazing developer blogs in the Internet. But very few of them gets visibility. Because of this visibility issue a lot of the developers blogs are shutting down or is moving to Medium in search of views. Developers should be able to own their blog without having to compromise on the views. Blogs are probably the last remaining bits of Internet, a network that was supposed to be decentralized and not owned by a few companies. diff.blog’s mission is to bring the audience back to the blogs and make blogs popular again.&lt;/p&gt;

&lt;h3 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h3&gt;

&lt;p&gt;The underlying engine of diff.blog is similar to an RSS reader. All most all the blogs have RSS feed. RSS feeds makes it really easy to keep updated with the posts of a blog. No blockchain. Nothing fancy. It’s just a file. You can read more about RSS feeds at https://www.youneedfeeds.com/.&lt;/p&gt;

&lt;h3 id=&quot;profile&quot;&gt;Profile&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://diff.blog/josecastillolema/&quot;&gt;https://diff.blog/josecastillolema/&lt;/a&gt;
&lt;a href=&quot;https://diff.blog/josecastillolema/&quot;&gt;&lt;img src=&quot;/assets/images/posts/2023-10-29-diff-blog/2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><summary type="html"></summary></entry><entry><title type="html">Development workflows on inmutable distros: rootless setup</title><link href="https://josecastillolema.github.io/dev-inmutable-distros/" rel="alternate" type="text/html" title="Development workflows on inmutable distros: rootless setup" /><published>2023-10-21T00:00:00-05:00</published><updated>2023-10-21T15:00:58-05:00</updated><id>https://josecastillolema.github.io/dev-inmutable-distros</id><content type="html" xml:base="https://josecastillolema.github.io/dev-inmutable-distros/">&lt;blockquote&gt;
  &lt;p&gt;Continuation of &lt;a href=&quot;https://samsai.eu/&quot;&gt;Samsai&lt;/a&gt; notes on &lt;a href=&quot;https://samsai.eu/post/toolbox-based-emacs-flatpak-workflow/&quot;&gt;Toolbox-based Emacs Flatpak workflow&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been using inmutable OS distributions for a while (Fedora Silverblue and Sericea, see my &lt;a href=&quot;/dotfiles&quot;&gt;dotfiles&lt;/a&gt;). They have the following characteristics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;System root (baseOS) is mostly immutable&lt;/li&gt;
  &lt;li&gt;System software installation/updates are handled as images and applied on reboot&lt;/li&gt;
  &lt;li&gt;For installing desktop applications, &lt;a href=&quot;https://flatpak.org/&quot;&gt;Flatpak&lt;/a&gt; is the recommended default route&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://containertoolbx.org/&quot;&gt;Toolbx&lt;/a&gt; can be used to set up containerized Linux environments for developer tools, these containers will mount your home directory and certain important files for GUI programs to work as well&lt;/li&gt;
  &lt;li&gt;Local user (rootless) installations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally follow these guidelines when installing new applications:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If it is a desktop application, prefer Flatpak (and some terminal ones too, i.e.: &lt;a href=&quot;https://flathub.org/apps/io.neovim.nvim&quot;&gt;Neovim&lt;/a&gt; and &lt;a href=&quot;https://flathub.org/apps/org.gnu.emacs&quot;&gt;Emacs&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;For terminal applications, consider Toolbx or local installations&lt;/li&gt;
  &lt;li&gt;Do not install desktop applications into Toolbx&lt;/li&gt;
  &lt;li&gt;Avoid duplication (i.e.: installing the same editors or development environments in several places)&lt;/li&gt;
  &lt;li&gt;Try to avoid &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpm-ostree&lt;/code&gt; layering on baseOS as much as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The development workflow story on inmutable distros hasn’t really been standardized yet, as these distros are quite new. Let’s take a look at several approaches and &lt;strong&gt;finally discuss the local (rootless) installation method&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;layering-with-rpm-ostree-not-a-good-idea&quot;&gt;Layering with rpm-ostree (not a good idea)&lt;/h2&gt;

&lt;p&gt;You can also install development tools directly on the inmutable distros install using package layering with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpm-ostree&lt;/code&gt;. So, if you want to, you can install your editor, compilers, build tools and linters straight on the Silverblue install.&lt;/p&gt;

&lt;p&gt;However, this isn’t really how most people view you should use Silverblue. The application installation process is a bit more annoying, although experimental support for installing software without rebooting does exist nowadays. It also makes your system install kind of messy due to large numbers of overlayed packages.&lt;/p&gt;

&lt;p&gt;I wouldn’t take this route because while you aren’t strictly speaking losing all of the benefits of inmutable distros, you are making life quite difficult for yourself compared to just using regular Fedora Workstation for instance. You also don’t get the benefits of separating your system from your application environments and expose yourself to more potential breakages.&lt;/p&gt;

&lt;h2 id=&quot;toolbx-approaches&quot;&gt;Toolbx approaches&lt;/h2&gt;

&lt;h3 id=&quot;single-toolbx-container-for-all-dev-activities&quot;&gt;Single toolbx container for all dev activities&lt;/h3&gt;
&lt;p&gt;The easiest way to have everything working in a predictable and simple manner is to create a single Toolbox container, which has all of the development tools for every single project installed within it. This means that the container contains your text editor of choice, compilers, linters, build tools and all of their dependencies.&lt;/p&gt;

&lt;p&gt;The benefit of this approach is that it is extremely close to how you’d work on any other Linux distribution.&lt;/p&gt;

&lt;p&gt;This approach has several drawbacks:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;All software pilled into one environment&lt;/li&gt;
  &lt;li&gt;Keeping the text editor inside the Toolbox still results in somewhat poor integration with the host system&lt;/li&gt;
  &lt;li&gt;Install desktop applications into toolbx containers instead of Flatpak applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-toolbx-container-per-language--project&quot;&gt;A toolbx container per language / project&lt;/h3&gt;

&lt;p&gt;Another (better IMO) possibility is to separately set up a Toolbox container for each project you work on. This means that all of your project environments are fully separated from each other and all of them only carry tools and dependencies relevant to the project in question.&lt;/p&gt;

&lt;p&gt;Loss of a Toolbox container limits the damage to a particular project and per-project Toolboxes are fairly simple to recreate.&lt;/p&gt;

&lt;p&gt;Drawbacks:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Certain parts of your development workflow need to be duplicated. You potentially need to install your text editor and all of its required dependencies and tools in each environment.&lt;/li&gt;
  &lt;li&gt;Keeping the text editor inside the Toolbox still results in somewhat poor integration with the host system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;flatpak-approach&quot;&gt;Flatpak approach&lt;/h2&gt;

&lt;p&gt;You can install Flatpak SDKs such as the Rust build tools like this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak install org.freedesktop.Sdk.Extension.rust-stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then load them into a Flatpak editor using an SDK extension flag:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ FLATPAK_ENABLE_SDK_EXT=rust-stable flatpak run com.visualstudio.code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or just load every SDK available in your local setup:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ FLATPAK_ENABLE_SDK_EXT=* flatpak run com.visualstudio.code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This causes the tools and libraries from that SDK to be made visible to the Flatpak application. There are Flatpak SDKs for a few languages like Java, Rust, Haskell, PHP and Node, but obviously support for all use-cases does not exist. But if you only plan to develop in languages that already have an SDK ready or are willing to learn how to package more SDKs, then this approach is definitely viable for things like Neovim, Emacs and VSCode Flatpaks.&lt;/p&gt;

&lt;p&gt;Drawbacks:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Some languages do not have an SDK available&lt;/li&gt;
  &lt;li&gt;Limited to the language runtime versions available in the SDKs&lt;/li&gt;
  &lt;li&gt;Duplication of the language runtime (plus you will need to install all the library dependencies on the Flatpak to have proper code support from your editor)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;combined-approach&quot;&gt;Combined approach&lt;/h2&gt;

&lt;p&gt;You can also mix approaches such that part of the development activity happens outside Toolbox and part of it inside the Toolbox. The simplest case would be installing your text editor via Flatpak for example and then connecting from that text editor to a Toolbox for project-specific tools like compilers.&lt;/p&gt;

&lt;p&gt;The benefit here is that you can install tools where they make most sense and where they integrate the best. So, you will get your nice app launchers and the ability to keep project environments separate.&lt;/p&gt;

&lt;p&gt;Tools available:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;For VSCode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;Dev Containers extension&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/owtaylor/toolbox-vscode&quot;&gt;toolbox-vscode&lt;/a&gt;: a script that configures the current toolbox container to work with the Remote Containers Visual Studio Code extension&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For Emacs
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/fejfighter/toolbox-tramp&quot;&gt;toolbox-tramp&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For Neovim
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvim --remote&lt;/code&gt; ?&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/jamestthompson3/nvim-remote-containers&quot;&gt;nvim-remote-containers&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;user-rootless-installations&quot;&gt;User (rootless) installations&lt;/h2&gt;

&lt;p&gt;I have not seen much information about this method anywhere and for me as of today it is the prefered approach. Flatpak applications (i.e.: editors) cannot access the root filesystem (i.e.: the preinstalled python package on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin/python&lt;/code&gt;). However they have full access to the home directory (same as Toolbx containers).&lt;/p&gt;

&lt;p&gt;So installing the development runtimes and tools locally (and then configuring your Flatpak editor to use them) provides an excelent out of the box developer experience without the need of Flatpak SDKs nor plugins to enable your editor to access the Toolbx containers.&lt;/p&gt;

&lt;p&gt;Drawbacks:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It can be more time consuming to set up than normal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpm&lt;/code&gt; installs in some scenarios&lt;/li&gt;
  &lt;li&gt;No automatic updates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s take a look at local installs for several platforms.&lt;/p&gt;

&lt;h3 id=&quot;ocaml&quot;&gt;OCaml&lt;/h3&gt;

&lt;p&gt;We will leverage the &lt;a href=&quot;https://opam.ocaml.org/&quot;&gt;OCaml Package Manager (opam)&lt;/a&gt; to install the platform (or several versions) and local switches to each project:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://github.com/ocaml/opam/releases/download/2.1.5/opam-2.1.5-i686-linux -Lo ~/bin/opam &amp;amp;&amp;amp; chmod +x ~/bin/opam
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From a toolbx container with proper development tools, i.e.: &lt;a href=&quot;https://github.com/josecastillolema/toolbox-images/blob/main/fedora-toolbox-38/Containerfile&quot;&gt;this one&lt;/a&gt; incialize the opam environment and install the &lt;a href=&quot;https://ocaml.org/docs/platform&quot;&gt;platform tools&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;⬢ $ opam init
⬢ $ opam install dune ocaml-lsp-server odoc ocamlformat utop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Optionally, install some extras for Emacs, Vim and Neovim:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;⬢ $ opam install ocp-indent ocp-index merlin tuareg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to add the opam path (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/bin&lt;/code&gt;) to our editor of choice (i.e.: VSCode) path:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo flatpak override --env=PATH=&apos;/app/bin:/usr/bin:/home/$USER/bin:/home/$USER/.opam/default/bin&apos; com.visualstudio.code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, open the project in VSCode and choose the corresponding opam switch.&lt;/p&gt;

&lt;h4 id=&quot;using-local-switches&quot;&gt;Using local switches&lt;/h4&gt;

&lt;p&gt;It is possible to define a switch within the source of a project to be used specifically in that project.
If a &lt;strong&gt;local switch&lt;/strong&gt; is detected in the current directory or a parent, opam will select it automatically.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;⬢ $ opam switch create .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, open the project in VSCode and choose the corresponding recommended opam switch.&lt;/p&gt;

&lt;h3 id=&quot;golang&quot;&gt;Golang&lt;/h3&gt;

&lt;p&gt;Download latest version:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdr ~/go
$ curl https://go.dev/dl/go1.21.3.linux-amd64.tar.gz -Lo ~/go.tar.gz
$ tar xf ~/go/go.tar.gz
$ mv ~/go/go ~/go/go-1.21.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the following environment variables to your environment:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export GOROOT=$HOME/go/go-1.21.3
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check installation:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ go version
go version go1.21.3 linux/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, open VSCode (it should automatically detect the local Golang installation), install the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=golang.Go&quot;&gt;Go VSCode extension&lt;/a&gt; and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;⚠ Analysis Tools Missing&lt;/code&gt; to install those.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2023-10-21-dev-inmutable-distros/go.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;python&quot;&gt;Python&lt;/h3&gt;

&lt;h4 id=&quot;local-install&quot;&gt;Local install&lt;/h4&gt;
&lt;p&gt;Install both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; in the local user environment.&lt;/p&gt;

&lt;p&gt;From a toolbx container with proper development tools, i.e.: &lt;a href=&quot;https://github.com/josecastillolema/toolbox-images/blob/main/fedora-toolbox-38/Containerfile&quot;&gt;this one&lt;/a&gt; download and compile Python:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;⬢ $ wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
⬢ $ tar -xf Python-3.?.?.tar.xz
⬢ $ cd Python-3.?.?.tar.xz
⬢ $ ./configure --prefix=$HOME
⬢ $ make install
⬢ $ ln -s ~/bin/python3 ~/bin/python
⬢ $ pip install readline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can just pip install any dependencies, open the project in VSCode and choose the corresponding Python environment &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/bin/python&lt;/code&gt;. I do not tend to pip install the requirements of the projects thought (only the indispensable ones, like i.e.: ansible), instead prefer the virtual environments approach that will be described next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2023-10-21-dev-inmutable-distros/python.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;using-python-virtual-environments&quot;&gt;Using python virtual environments&lt;/h4&gt;

&lt;p&gt;Before opening the project in VSCode:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flatpak run --command=sh com.visualstudio.code
[📦] python -m venv .
[📦] source bin/activate
()[📦] pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then open the project in VSCode and choose the local virtual environment.&lt;/p&gt;

&lt;h3 id=&quot;ansible&quot;&gt;Ansible&lt;/h3&gt;

&lt;p&gt;Python local install is a pre-requisite.&lt;/p&gt;

&lt;p&gt;Local ansible installation:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m pip install --user ansible ansible-lint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ansible will be installed on ~/.local/bin, so we need to add this path to our editor of choice (i.e.: VSCode):&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ which ansible
~/.local/bin/ansible
$ sudo flatpak override --env=PATH=&apos;/app/bin:/usr/bin:/home/$USER/.local/bin&apos; com.visualstudio.code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Installed the Ansible extension by Red Hat in VSCode and &lt;a href=&quot;https://developers.redhat.com/articles/2023/08/22/enhance-ansible-development-experience-lightspeed&quot;&gt;enabled Lightspeed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When opening VSCode it should automatically detect the local Ansible installation.&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="dev" /><category term="en" /><category term="redhat" /><summary type="html">Continuation of Samsai notes on Toolbox-based Emacs Flatpak workflow.</summary></entry><entry><title type="html">Kubemark on OpenShift</title><link href="https://josecastillolema.github.io/kubemark-ocp/" rel="alternate" type="text/html" title="Kubemark on OpenShift" /><published>2023-09-19T00:00:00-05:00</published><updated>2023-09-19T15:00:58-05:00</updated><id>https://josecastillolema.github.io/kubemark-ocp</id><content type="html" xml:base="https://josecastillolema.github.io/kubemark-ocp/">&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes/kubernetes/tree/master/cmd/kubemark&quot;&gt;Kubemark&lt;/a&gt; is a performance testing tool which allows users to run experiments on simulated clusters, by creating “hollow” Kubernetes nodes. What this means is that the nodes do not actually run containers or attach storage, but they do behave like they did, with updates to etcd and all the trimmings. At the same time, &lt;strong&gt;hollow nodes are extremely light (&amp;lt;30 MiB)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The primary use case of Kubemark is scalability testing, as simulated clusters can be much bigger than the real ones. The objective is to expose problems with the master components (API server, controller manager or scheduler) that appear only on bigger clusters (e.g. small memory leaks).&lt;/p&gt;

&lt;h2 id=&quot;hands-to-work&quot;&gt;Hands to work&lt;/h2&gt;

&lt;p&gt;We won’t be using the &lt;a href=&quot;https://github.com/kubernetes-sigs/cluster-api-provider-kubemark/&quot;&gt;Cluster API Kubemark Provider&lt;/a&gt; for this demo, and instead we will be using directly Kubemark itself.&lt;/p&gt;

&lt;p&gt;Let’s assume we have a &lt;strong&gt;working OpenShift cluster&lt;/strong&gt; available. We will be leveraging a &lt;a href=&quot;https://developers.redhat.com/products/openshift-local/overview&quot;&gt;Red Hat OpenShift Local instance&lt;/a&gt; (formerly Red Hat CodeReady Containers) for this demo:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc version
Client Version: 4.13.6
Kustomize Version: v4.5.7
Server Version: 4.13.6
Kubernetes Version: v1.26.6+73ac561

❯ oc get node
NAME                 STATUS   ROLES                         AGE     VERSION
crc-2zx29-master-0   Ready    control-plane,master,worker   54d     v1.26.6+73ac561
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s create a new &lt;strong&gt;project&lt;/strong&gt;, &lt;strong&gt;secret&lt;/strong&gt; and corresponding &lt;strong&gt;permissions&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc new-project kubemark
Now using project &quot;kubemark&quot; on server &quot;https://api.crc.testing:6443&quot;.

❯ oc create secret generic kubeconfig --from-file=kubeconfig=$KUBECONFIG
secret/kubeconfig created

❯ oc adm policy add-scc-to-user privileged -z default
clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: &quot;default&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s create the &lt;strong&gt;Kubemark pod&lt;/strong&gt; (which in turn will automatically instantiate a new node):&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;❯ cat &amp;lt;&amp;lt;EOF | oc apply -f -&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hollow-node&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubemark-node&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubemark&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--v=3&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--morph=kubelet&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--name=kubemark-node&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--extended-resources=cpu=1,memory=4G&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/kubemark&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/cluster-api-provider-kubemark/kubemark:v1.26.7&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hollow-node&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;securityContext&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;privileged&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/kubeconfig&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubeconfig&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/run/containerd/containerd.sock&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;containerd-sock&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubeconfig&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;defaultMode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;secretName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubeconfig&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/run/crio/crio.sock&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Socket&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;containerd-sock&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;pod/kubemark-node created&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;validation&quot;&gt;Validation&lt;/h2&gt;

&lt;p&gt;Let’s check the if new node was properly registered:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc get po
NAME             READY   STATUS    RESTARTS   AGE
kubemark-node    1/1     Running   0          5s

❯ oc get node
NAME                 STATUS   ROLES                         AGE     VERSION
crc-2zx29-master-0   Ready    control-plane,master,worker   54d     v1.26.6+73ac561
kubemark-node        Ready    &amp;lt;none&amp;gt;                        4s      v1.26.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The cluster should be healthy:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc get co
NAME                                       VERSION   AVAILABLE   PROGRESSING   DEGRADED   SINCE   MESSAGE
authentication                             4.13.6    True        False         False      12d
cluster-api                                4.13.6    True        False         False      13d
config-operator                            4.13.6    True        False         False      54d
console                                    4.13.6    True        False         False      12d
control-plane-machine-set                  4.13.6    True        False         False      54d
dns                                        4.13.6    True        False         False      12d
etcd                                       4.13.6    True        False         False      54d
image-registry                             4.13.6    True        False         False      12d
ingress                                    4.13.6    True        False         False      54d
kube-apiserver                             4.13.6    True        False         False      54d
kube-controller-manager                    4.13.6    True        False         False      54d
kube-scheduler                             4.13.6    True        False         False      54d
kube-storage-version-migrator              4.13.6    True        False         False      12d
machine-api                                4.13.6    True        False         False      54d
machine-approver                           4.13.6    True        False         False      54d
machine-config                             4.13.6    True        False         False      54d
marketplace                                4.13.6    True        False         False      54d
network                                    4.13.6    True        False         False      54d
openshift-apiserver                        4.13.6    True        False         False      12d
openshift-controller-manager               4.13.6    True        False         False      12d
openshift-samples                          4.13.6    True        False         False      54d
operator-lifecycle-manager                 4.13.6    True        False         False      54d
operator-lifecycle-manager-catalog         4.13.6    True        False         False      54d
operator-lifecycle-manager-packageserver   4.13.6    True        False         False      119m
platform-operators-aggregated              4.13.6    True        False         False      119m
service-ca                                 4.13.6    True        False         False      54d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there should a few pods already “running” in the new hollow node:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc get pods -A --field-selector spec.nodeName=kubemark-node
NAMESPACE                           NAME                                  READY   STATUS     RESTARTS   AGE
hostpath-provisioner                csi-hostpathplugin-8p9j5              4/4     Running    0          17m
openshift-dns                       dns-default-lt7g8                     2/2     Running    0          17m
openshift-dns                       node-resolver-9plz7                   1/1     Running    0          17m
openshift-image-registry            node-ca-x7hq7                         1/1     Running    0          17m
openshift-ingress-canary            ingress-canary-l2mlx                  1/1     Running    0          17m
openshift-machine-config-operator   machine-config-daemon-smq5z           2/2     Running    0          17m
openshift-multus                    multus-7xp8p                          1/1     Running    0          17m
openshift-multus                    multus-additional-cni-plugins-rv6j7   0/1     Init:0/6   0          17m
openshift-multus                    network-metrics-daemon-zh2vz          2/2     Running    0          17m
openshift-network-diagnostics       network-check-target-l85xq            1/1     Running    0          17m
openshift-sdn                       sdn-rv9mb                             2/2     Running    0          17m

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s try to create some pods on the new hollow node:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ oc run test --image nginx --overrides=&apos;{&quot;spec&quot;: { &quot;nodeSelector&quot;: {&quot;kubernetes.io/hostname&quot;: &quot;kubemark-node&quot;}}}&apos;
pod/test created

❯ oc get po -o wide test
NAME   READY   STATUS    RESTARTS   AGE   IP                NODE            NOMINATED NODE   READINESS GATES
test   1/1     Running   0          36s   192.168.192.168   kubemark-node   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;scale-out&quot;&gt;Scale out&lt;/h2&gt;

&lt;p&gt;Finally, bear in mind that in order to create new hollow nodes you will have to change two fields in the pod definition:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The pod name: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;metadata.name&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The name of the hollow node: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spec.containers.args.--name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="networks" /><category term="openshift" /><category term="redhat" /><summary type="html">Kubemark is a performance testing tool which allows users to run experiments on simulated clusters, by creating “hollow” Kubernetes nodes. What this means is that the nodes do not actually run containers or attach storage, but they do behave like they did, with updates to etcd and all the trimmings. At the same time, hollow nodes are extremely light (&amp;lt;30 MiB).</summary></entry><entry><title type="html">My Linux desktop</title><link href="https://josecastillolema.github.io/dotfiles/" rel="alternate" type="text/html" title="My Linux desktop" /><published>2023-06-07T00:00:00-05:00</published><updated>2023-06-07T15:00:58-05:00</updated><id>https://josecastillolema.github.io/dotfiles</id><content type="html" xml:base="https://josecastillolema.github.io/dotfiles/">&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=dotfiles&amp;amp;type=watch&amp;amp;count=true&amp;amp;size=large&amp;amp;v=2&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;130&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=dotfiles&amp;amp;type=star&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;115&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;repo=dotfiles&amp;amp;type=fork&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;170&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;dotfiles&quot;&gt;dotfiles&lt;/h1&gt;

&lt;p&gt;My Linux desktop setup on &lt;a href=&quot;https://fedoraproject.org/sericea/&quot;&gt;Fedora Sericea&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/josecastillolema/dotfiles/master/img/screenshot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;desktop&quot;&gt;Desktop&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Window manager: Sway via baseOS&lt;/p&gt;

    &lt;p&gt;Only use wayland applications; xwayland apps are not properly scaled &lt;a href=&quot;https://github.com/swaywm/sway/issues/2966&quot;&gt;swaywm/sway#2966&lt;/a&gt;, drag and drop does not work &lt;a href=&quot;https://github.com/swaywm/sway/issues/6460&quot;&gt;swaywm/sway#6460&lt;/a&gt; and have a glitched behaviour uppon minimized on system tray &lt;a href=&quot;https://github.com/swaywm/sway/issues/6905&quot;&gt;swaywm/sway#6905&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Browser
    &lt;ul&gt;
      &lt;li&gt;Primary: Firefox via &lt;a href=&quot;https://flathub.org/apps/org.mozilla.firefox&quot;&gt;Flatpak&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Secondary: Chrome via &lt;a href=&quot;https://flathub.org/apps/com.google.Chrome&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;

        &lt;p&gt;With flags &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--ozone-platform-hint=wayland&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--enable-pixel-canvas-recording=enabled&lt;/code&gt;.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Terminal: &lt;a href=&quot;https://wezfurlong.org/wezterm/&quot;&gt;WezTerm&lt;/a&gt; via &lt;a href=&quot;https://flathub.org/apps/org.wezfurlong.wezterm&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Amazing terminal with wayland, grabbable scrollbar and ligature support.&lt;/p&gt;

    &lt;p&gt;Would prefer Foot but having a grabbable scrollbar is a must for now. One workaround would be to setup fast scroll (i.e.: &lt;em&gt;$mod + scroll wheel&lt;/em&gt;) but I have not been able to configure it correctly (if anyone has please let me know &lt;a href=&quot;#issues&quot;&gt;↵&lt;/a&gt;). Also Foot does not support ligatures &lt;a href=&quot;https://codeberg.org/dnkl/foot/issues/57&quot;&gt;dnkl/foot#57&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;IDE:
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Primary: Visual Studio Code via &lt;a href=&quot;https://flathub.org/apps/com.visualstudio.code&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;

        &lt;p&gt;With flags &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--socket=wayland&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--ozone-platform-hint=wayland&lt;/code&gt;.&lt;/p&gt;

        &lt;p&gt;With &lt;a href=&quot;https://github.com/JetBrains/JetBrainsMono&quot;&gt;JetBrains Mono font&lt;/a&gt; with programming ligatures installed via rpm-ostree.&lt;/p&gt;

        &lt;p&gt;Instead of using SDK extensions &lt;a href=&quot;https://josecastillolema.github.io/dev-inmutable-distros/&quot;&gt;tend to opt for local language installs (golang, ocaml, etc.)&lt;/a&gt;.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;https://github.com/owtaylor/toolbox-vscode&quot;&gt;toolbox-vscode&lt;/a&gt; to integrate VSCode and toolbx.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Secundary: Neovim via &lt;a href=&quot;https://flathub.org/es/apps/io.neovim.nvim&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;File manager: Nautilus via rpm-ostree with NautilusPreviewer (GNOME Sushi) via Flatpak (org.gnome.NautilusPreviewer)&lt;/p&gt;

    &lt;p&gt;Would prefer Thunar or PCMan FM but miss the preview feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Text editor: Gnome Text Editor via &lt;a href=&quot;https://flathub.org/apps/org.gnome.TextEditor&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PDF reader: Evince (GNOME Document Viewer) via &lt;a href=&quot;https://flathub.org/apps/org.gnome.Evince&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Image viewer: imv via baseOS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Basic photo editing: Drawing via &lt;a href=&quot;https://flathub.org/apps/com.github.maoschanz.drawing&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Video player: mpv via &lt;a href=&quot;https://flathub.org/apps/io.mpv.Mpv&quot;&gt;Flatpak&lt;/a&gt; using the flathub repo&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Torrent client: Transmission via &lt;a href=&quot;https://flathub.org/apps/com.transmissionbt.Transmission&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;File sync
    &lt;ul&gt;
      &lt;li&gt;Dropbox via &lt;a href=&quot;https://flathub.org/apps/com.dropbox.Client&quot;&gt;Flatpak&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Gdrive with rclone via rpm-ostree&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Office suite: LibreOffice via &lt;a href=&quot;https://flathub.org/apps/org.libreoffice.LibreOffice&quot;&gt;Flatpak&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Display setup: wdisplays via rpm-ostree&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Shell: bash via baseOS&lt;/li&gt;
  &lt;li&gt;Terminal multiplexer: tmux in remote systems&lt;/li&gt;
  &lt;li&gt;Configuration management: Ansible via &lt;a href=&quot;https://github.com/josecastillolema/toolbox-images/blob/main/fedora-toolbox-38/Containerfile#L16&quot;&gt;toolbx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Text editor: neovim via &lt;a href=&quot;https://flathub.org/es/apps/io.neovim.nvim&quot;&gt;Flatpak&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Prompt: Starship via local install&lt;/li&gt;
  &lt;li&gt;Containers: Podman and Toolbx via base OS, Docker in rootless mode via local install
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/josecastillolema/toolbox-images&quot;&gt;Toolbx images&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Virtualization: &lt;a href=&quot;https://kcli.readthedocs.io/en/latest/&quot;&gt;kcli&lt;/a&gt; via &lt;a href=&quot;https://github.com/josecastillolema/toolbox-images/blob/main/fedora-toolbox-38/Containerfile#L19-L21&quot;&gt;toolbx&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/josecastillolema/kcli-plans&quot;&gt;Kcli plans&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kubernetes: Kind and kube-burner via local install&lt;/li&gt;
  &lt;li&gt;Application management: rpm-ostree and Flatpak via baseOS&lt;/li&gt;
  &lt;li&gt;Keyboard input: wtype via rpm-ostree&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tricks&quot;&gt;Tricks&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;For &lt;a href=&quot;https://github.com/ovn-org/ovn-kubernetes/&quot;&gt;ovn-kubernetes&lt;/a&gt;:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo modprobe openvswitch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;For &lt;a href=&quot;https://kubevirt.io/&quot;&gt;KubeVirt&lt;/a&gt;:
    &lt;ul&gt;
      &lt;li&gt;Create the kind cluster as root&lt;/li&gt;
      &lt;li&gt;The following command will allow the installation of KubeVirt in a rootless cluster but then the VMs won’t be created because rootless docker/podman are unable to create pods in kind with ephemeral storage requests &lt;a href=&quot;https://github.com/kubernetes-sigs/kind/issues/3359&quot;&gt;kubernetes-sigs/kind#3359&lt;/a&gt;:
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo chown $USER /dev/kvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For &lt;a href=&quot;https://github.com/redhat-performance/web-burner&quot;&gt;web-burner&lt;/a&gt;:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo sysctl -w kernel.keys.maxkeys=5000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a kind cluster using rootless podman as provider without the need of setting systemd property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Delegate=yes&lt;/code&gt; (see &lt;a href=&quot;https://kind.sigs.k8s.io/docs/user/rootless/&quot;&gt;https://kind.sigs.k8s.io/docs/user/rootless/&lt;/a&gt;):
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; KIND_EXPERIMENTAL_PROVIDER=podman systemd-run --scope --user ~/go/bin/kind create cluster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;issues&quot;&gt;Issues&lt;/h2&gt;

&lt;p&gt;If you have managed to get working any of the following please let me know:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Docker/Podman in rootless mode
    &lt;ul&gt;
      &lt;li&gt;Unable to create pods in kind with ephemeral storage requests &lt;a href=&quot;https://github.com/kubernetes-sigs/kind/issues/3359&quot;&gt;kubernetes-sigs/kind#3359&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Emacs Flatpak
    &lt;ul&gt;
      &lt;li&gt;^G detaches text-mode emacs from terminal &lt;a href=&quot;https://github.com/flathub/org.gnu.emacs/issues/6&quot;&gt;flathub/org.gnu.emacs#6&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Pure-GTK (wayland) support &lt;a href=&quot;https://github.com/flathub/org.gnu.emacs/issues/58&quot;&gt;flathub/org.gnu.emacs#58&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Firefox
    &lt;ul&gt;
      &lt;li&gt;Slack huddles are not available &lt;a href=&quot;https://github.com/webcompat/web-bugs/issues/82623&quot;&gt;webcompat/web-bugs#82623&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;s&gt;Prime Video does not work (neither Chrome nor Firefox) https://www.primevideo.com/region/na/help?nodeId=GU85HKX66NVFNQ9Y&lt;/s&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nautilus
    &lt;ul&gt;
      &lt;li&gt;Extract files to current folder &lt;a href=&quot;https://www.reddit.com/r/gnome/comments/112a3jq/extract_files_to_current_folder/&quot;&gt;r/gnome/112a3jq&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Nautilus on Flathub &lt;a href=&quot;https://gitlab.gnome.org/GNOME/nautilus/-/issues/946&quot;&gt;GNOME/nautilus#946&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Starship
    &lt;ul&gt;
      &lt;li&gt;Conditional styling for Toolbx symbol &lt;a href=&quot;https://github.com/starship/starship/issues/2724&quot;&gt;starship/starship#2724&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sway
    &lt;ul&gt;
      &lt;li&gt;
        &lt;s&gt;Drag &amp;amp; Drop from XWayland apps to Wayland ones: it only works occasionally [swaywm/sway#6460](https://github.com/swaywm/sway/issues/6460)&lt;/s&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;s&gt;Differentiate between *app_ids* that start the same [swaywm/sway#7838](https://github.com/swaywm/sway/issues/7838)&lt;/s&gt;
      &lt;/li&gt;
      &lt;li&gt;Fast scroll using &lt;em&gt;$mod + ScrollWheel&lt;/em&gt;. Tried with:
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bindsym --whole-window $mod+button4 exec &quot;wtype -M shift -k Prior&quot;
 bindsym --whole-window $mod+button5 exec &quot;wtype -M shift -k Next&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;Problem 1: Only works the first wheel turn, then need to relase and press again &lt;em&gt;$mod&lt;/em&gt;&lt;/li&gt;
          &lt;li&gt;Problem 2: Different apps use different combinations, i.e.: just &lt;em&gt;ScrollWheel&lt;/em&gt; or &lt;em&gt;Shift+ScrollWheel&lt;/em&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Persistent workspaces &lt;a href=&quot;https://github.com/swaywm/sway/pull/7631&quot;&gt;swaywm/sway#7631&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Share a specific window on Google Meet &lt;a href=&quot;https://github.com/swaywm/sway/issues/3282&quot;&gt;swaywm/sway#3282&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;s&gt;XWayland windows gets tiled uppong being reopened from system tray [swaywm/sway#6905](https://github.com/swaywm/sway/issues/6905)&lt;/s&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Toolbx
    &lt;ul&gt;
      &lt;li&gt;Support for custom commands upon entering container &lt;a href=&quot;https://github.com/containers/toolbox/issues/1302&quot;&gt;containers/toolbox#1302&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Vim Flatpak
    &lt;ul&gt;
      &lt;li&gt;Wayland support &lt;a href=&quot;https://github.com/vim/vim/issues/4727&quot;&gt;vim/vim#4727&lt;/a&gt;, &lt;a href=&quot;https://github.com/vim/vim/pull/9639&quot;&gt;vim/vim#9639&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Visual Studio Code
    &lt;ul&gt;
      &lt;li&gt;Add optional Wayland support &lt;a href=&quot;https://github.com/flathub/com.visualstudio.code/issues/471&quot;&gt;flathub/com.visualstudio.code#471&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Crash when rebuilding application menu on wayland &lt;a href=&quot;https://github.com/microsoft/vscode/issues/184124&quot;&gt;microsoft/vscode#184124&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Exit Vim Insert Mode on Save &lt;a href=&quot;https://github.com/VSCodeVim/Vim/issues/2411&quot;&gt;VSCodeVim/Vim#2411&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;s&gt;JetBrains Mono font ligatures not working [JetBrains/JetBrainsMono#655](https://github.com/JetBrains/JetBrainsMono/issues/655)&lt;/s&gt;
      &lt;/li&gt;
      &lt;li&gt;Paste through mouse middle button does not insert text at cursor position&lt;a href=&quot;https://github.com/VSCodeVim/Vim/issues/5065&quot;&gt;VSCodeVim/Vim#5065&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Reset to normal mode when leaving file focus &lt;a href=&quot;https://github.com/VSCodeVim/Vim/issues/7553&quot;&gt;VSCodeVim/Vim#7553&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Small/giant mouse cursor &lt;a href=&quot;https://github.com/microsoft/vscode/issues/136390&quot;&gt;microsoft/vscode#136390&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Zathura
    &lt;ul&gt;
      &lt;li&gt;Add Flatpak manifest &lt;a href=&quot;https://git.pwmt.org/pwmt/zathura/-/merge_requests/25&quot;&gt;pwmt/zathura#25&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Setup hibernation
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://discussion.fedoraproject.org/t/setup-hibernation-on-silverblue-kionite/78834&quot;&gt;https://discussion.fedoraproject.org/t/setup-hibernation-on-silverblue-kionite/78834&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=259382&quot;&gt;https://bbs.archlinux.org/viewtopic.php?id=259382&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src=&quot;https://ghbtns.com/github-btn.html?user=josecastillolema&amp;amp;type=follow&amp;amp;count=true&amp;amp;size=large&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;230&quot; height=&quot;30&quot; title=&quot;GitHub&quot;&gt;&lt;/iframe&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="redhat" /><summary type="html"></summary></entry><entry><title type="html">Telecom cloud-native development: an industry point of view</title><link href="https://josecastillolema.github.io/imdea/" rel="alternate" type="text/html" title="Telecom cloud-native development: an industry point of view" /><published>2023-06-02T00:00:00-05:00</published><updated>2023-06-02T15:00:58-05:00</updated><id>https://josecastillolema.github.io/imdea</id><content type="html" xml:base="https://josecastillolema.github.io/imdea/">&lt;p&gt;&lt;a href=&quot;https://networks.imdea.org/whatsnew/events-agenda/&quot;&gt;&lt;img src=&quot;/assets/images/posts/2023-06-02-imdea.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Telcos are increasingly moving from physical/virtual to cloud-native network functions in the context of 5G adoption. In this talk we will describe the telecom network transformation journey, benefits of cloud-native deployments, technical requirements/constraints of the underlying cloud service managers, the role of open source technologies and the use of the operator pattern in telecom contexts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event&lt;/strong&gt;: &lt;a href=&quot;https://networks.imdea.org/whatsnew/events-agenda/telecom-cloud-native-development-an-industry-point-of-view/&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt;: 9 Jun 2023&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Location&lt;/strong&gt;: MR-A1 [Ramón] &amp;amp; MR-A2 [Cajal], IMDEA Networks Institute, Avda. del Mar Mediterráneo 22, 28918 Leganés – Madrid&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time&lt;/strong&gt;: 12:00&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add to Calendar&lt;/strong&gt;: &lt;a href=&quot;https://networks.imdea.org/whatsnew/events-agenda/telecom-cloud-native-development-an-industry-point-of-view/#&quot;&gt;iCalendar&lt;/a&gt; &lt;a href=&quot;https://networks.imdea.org/whatsnew/events-agenda/telecom-cloud-native-development-an-industry-point-of-view/#&quot;&gt;Outlook&lt;/a&gt; &lt;a href=&quot;https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=Telecom+cloud-native+development%3A+an+industry+point+of+view&amp;amp;dates=20230609T100000Z/20230609T120000Z&amp;amp;details=&amp;amp;location=MR-A1+%5BRam%C3%B3n%5D+%26+MR-A2+%5BCajal%5D%2C+IMDEA+Networks+Institute%2C+Avda.+del+Mar+Mediterr%C3%A1neo+22%2C+28918+Legan%C3%A9s+%E2%80%93+Madrid&amp;amp;sf=true&amp;amp;output=xml&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="events" /><category term="networks" /><category term="nfv" /><category term="research" /><category term="sdn" /><summary type="html"></summary></entry><entry><title type="html">NetSoft 2023 - Network Softwarization in the Era of Complexity</title><link href="https://josecastillolema.github.io/netsoft23/" rel="alternate" type="text/html" title="NetSoft 2023 - Network Softwarization in the Era of Complexity" /><published>2023-05-25T00:00:00-05:00</published><updated>2023-06-24T15:00:58-05:00</updated><id>https://josecastillolema.github.io/netsoft23</id><content type="html" xml:base="https://josecastillolema.github.io/netsoft23/">&lt;p&gt;&lt;a href=&quot;https://netsoft2023.ieee-netsoft.org/&quot;&gt;&lt;img src=&quot;/assets/images/posts/2023-05-25-netsoft23/1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://netsoft2023.ieee-netsoft.org/about&quot;&gt;9th IEEE International Conference on Network Softwarization (IEEE NetSoft 2023)&lt;/a&gt; will be held in &lt;strong&gt;Madrid, Spain from June 19 to June 23, 2023&lt;/strong&gt;. The conference will be hosted by University Carlos III of Madrid, one of the best Spanish universities in many technical areas, in its downtown campus in Madrid.&lt;/p&gt;

&lt;p&gt;The theme of the IEEE NetSoft 2023 &lt;em&gt;Boosting Future Networks through Advanced Softwarization&lt;/em&gt; reflects the vision that future networks will also integrate a native service dimension in a continuum compute-connectivity environment crossing different network segments/providers/domains and enabled by softwarization coupled with new advanced architectures, frameworks, and models. This will allow greater flexibility, reliability, adaptability, and efficiency for both network operations and service deployments for the benefit of an ecosystem of different application layers/developers/components. This will also lay the foundation to head beyond the current inter-networking capabilities in Future Internet architectures and to further convergence between internetworking and IP layer re-engineering.&lt;/p&gt;

&lt;p&gt;As in previous events, the IEEE NetSoft 2023 will showcase the latest research and development results from academia and industry in the area of AI/ML, SDN/NFV, edge/fog networking, management and orchestration, network slicing, energy efficiency, cloud-native deployments, security among others promising research areas in the context of Future Internet with the final aim of enabling an open softwarized network environment featured by full automation and autonomicity, native network slicing, and AI-based and dynamic control, management and orchestration.&lt;/p&gt;

&lt;p&gt;IEEE NetSoft 2023 will feature an intense five-day conference program. The core of the conference will run from June 20 to June 22 and will feature inspiring Keynote Talks delivered by world-class researchers and industry representatives. It also includes a Distinguished Expert Panel, Technical Sessions, as well as Demos showcasing prototypes and proof-of-concept implementations of ongoing research ideas. On June 19 and June 23, the program includes workshops and tutorials that will provide the opportunity to deep dive into the focused topics on network softwarization. In addition, in this edition for the first time a PhD symposium will take place to engage PhD students in the vibrant NetSoft community and give them the opportunity to exchange ideas and receive valuable and constructive feedback for PhD work.&lt;/p&gt;

&lt;h2 id=&quot;network-softwarization-in-the-era-of-complexity&quot;&gt;&lt;a href=&quot;https://netsoft2023.ieee-netsoft.org/program/distinguished-expert-panel&quot;&gt;Network Softwarization in the Era of Complexity&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The IEEE International Conference on Network Softwarization (NetSoft) has a long-standing tradition of hosting a Distinguished Expert Panel (DEP) at the end of the three main conference days. The DEP offers the audience the possibility to hear the opinions and visions of renowned experts coming from academia, industry, and government agencies on the most relevant aspects of network softwarization, as well as to actively interact with them.&lt;/p&gt;

&lt;p&gt;The NetSoft 2023 conference theme (&lt;em&gt;Boosting Future Networks through Advanced Softwarization&lt;/em&gt;) reflects the vision of networks characterized by unprecedented levels of complexity, which can be dealt with only through the flexibility, reliability, efficiency, and abstraction capabilities offered by network softwarization and its advanced architectures, frameworks, and models. How to approach such complexity from a perspective that has practical implications on industry and society, taking advantage of the pervasiveness of communications and their evolution toward intelligent paradigms, will be discussed in the NetSoft 2023 DEP, scheduled on &lt;strong&gt;Thursday, June 22&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://netsoft2023.ieee-netsoft.org/program/distinguished-expert-panel&quot;&gt;panel&lt;/a&gt; will be centered on the topic &lt;em&gt;Network Softwarization in the Era of Complexity&lt;/em&gt; and the discussion will continue on two interesting subtopics: &lt;em&gt;Industrialization of Network Softwarization&lt;/em&gt; and &lt;em&gt;Network Softwarization: Pervasiveness and Intelligence&lt;/em&gt;. Champions from industry and academia will present their views and introduce the challenges, stimulating the participation of the other panelists as well as the audience.&lt;/p&gt;

&lt;h2 id=&quot;panelists&quot;&gt;Panelists&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Rui Aguiar, IT Aveiro, Portugal&lt;/li&gt;
  &lt;li&gt;Javier Antich Romaguera, Selector AI, Spain&lt;/li&gt;
  &lt;li&gt;Jose Castillo Lema,  Red Hat, Spain&lt;/li&gt;
  &lt;li&gt;Abhimanyu Gosain, Northeastern University, USA&lt;/li&gt;
  &lt;li&gt;Ricard Vilalta, CTTC, Spain&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;co-chairs&quot;&gt;Co-chairs&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Luis Miguel Contreras Murillo, Telefonica I+D, Spain&lt;/li&gt;
  &lt;li&gt;Walter Cerroni, University of Bologna, Italy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2023-05-25-netsoft23/2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>Jose Castillo Lema</name></author><category term="en" /><category term="events" /><category term="networks" /><category term="nfv" /><category term="redhat" /><category term="research" /><category term="sdn" /><summary type="html"></summary></entry></feed>